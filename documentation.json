{
    "pipes": [],
    "interfaces": [
        {
            "name": "ContextmenuData",
            "id": "interface-ContextmenuData-dc4210242b308505744e2802d69f0c8671c02911330db897b5265c56fde77048a746d8a7924db23008ee96bd1323f92814a79dc8fba3dde6668cb9f585b4e7e3",
            "file": "projects/hammerhead-ui/src/lib/directives/contextmenu.directive.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ContextmenuItem } from '../interfaces/contextmenu-item.interface';\n\ninterface ContextmenuData {\n    menuItems: ContextmenuItem[];\n    entity: any;\n}\n\n@Directive({ selector: '[hhContextmenu]', providers: [MatDialog] })\nexport class ContextmenuDirective {\n    public static readonly BACKDROP_CLASS = 'hh-contextmenu-backdrop';\n\n    @Input('hhContextmenu') public entity: any;\n    // tslint:disable-next-line: no-input-rename\n    @Input('hhContextmenuItems') public menuItems: ContextmenuItem[];\n\n    @HostListener('contextmenu', ['$event'])\n    public onRightClick(event: MouseEvent): void {\n        /* Prevent OS context menu from opening */\n        event.preventDefault();\n\n        const dialogRef = this.dialog.open(ContextmenuDialogComponent, {\n            data: { menuItems: this.menuItems, entity: this.entity },\n            position: { top: `${event.pageY}px`, left: `${event.pageX}px` },\n            panelClass: 'hh-contextmenu-panel',\n            backdropClass: ContextmenuDirective.BACKDROP_CLASS,\n            minWidth: '188px'\n        });\n\n        const destroyed$ = new Subject<void>();\n\n        merge(\n            dialogRef.afterClosed(),\n            dialogRef.componentInstance.onClose,\n            fromEvent(document.getElementsByClassName(ContextmenuDirective.BACKDROP_CLASS).item(0), 'contextmenu')\n        )\n            .pipe(takeUntil(destroyed$))\n            .subscribe(() => {\n                destroyed$.next();\n                dialogRef.close();\n            });\n    }\n\n    constructor(private dialog: MatDialog, private el: ElementRef) {\n        this.el.nativeElement.style.cursor = 'context-menu';\n    }\n}\n\n@Component({\n    selector: 'hh-contextmenu-dialog',\n    styles: [\n        `\n            .hh-contextmenu-panel mat-dialog-container {\n                padding: 4px !important;\n            }\n\n            .contextmenu-list {\n                padding-top: 0 !important;\n            }\n        `\n    ],\n    encapsulation: ViewEncapsulation.None,\n    template: `\n        <mat-action-list class=\"contextmenu-list\">\n            <div\n                *ngFor=\"let item of data.menuItems\"\n                class=\"mat-list-item\"\n                [style.padding]=\"'0 4px'\"\n                (click)=\"item.onClick(data.entity, $event); onClose.emit()\"\n                fxLayoutAlign=\"start center\"\n                fxLayoutGap=\"8px\"\n            >\n                <mat-icon *ngIf=\"item.icon\">{{ item.icon }}</mat-icon>\n                <p>{{ item.label }}</p>\n            </div>\n        </mat-action-list>\n    `\n})\nexport class ContextmenuDialogComponent {\n    public onClose = new EventEmitter<void>();\n\n    constructor(@Inject(MAT_DIALOG_DATA) public readonly data: ContextmenuData) {}\n}\n",
            "properties": [
                {
                    "name": "entity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContextmenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ContextmenuItem",
            "id": "interface-ContextmenuItem-248111dc3c56a94671360905c2972943b3229819db2b9b7bec8f9da35837f660effcbde3c86388e5d2a89209bf19f0ea2c06b9d477274fa11be5a5756957bddf",
            "file": "projects/hammerhead-ui/src/lib/interfaces/contextmenu-item.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ContextmenuItem<T = any> {\n    label: string;\n    icon: string;\n    onClick: (entity: T, event?: MouseEvent) => void;\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataDialog",
            "id": "interface-DataDialog-70825de2bb2dfb8a2de4636e56ec91afde833db79caf33c818e342ef57561b5f2e9fdb7e63ad2914e12fc7602de890ebc5e878ed7a0eda2371e26ccc8bf3bbc2",
            "file": "projects/hammerhead-ui/src/lib/interfaces/data-dialog.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface DataDialog<T = any> {\n    data?: any;\n    onClose: EventEmitter<T>;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<T>",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataTableAction",
            "id": "interface-DataTableAction-30040c380fa120b12ab20a74606dcdca1ba94d42e8a3b2b94e254e7f350faf6e13607838164a0dba269ec1a829106c087bbcb1a17999c7504de51358ef8bed55",
            "file": "projects/hammerhead-ui/src/lib/interfaces/data-table-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TooltipPosition } from '@angular/material/tooltip';\nimport { Observable } from 'rxjs';\n\nexport interface DataTableConfig<T = any> {\n    columns: DataTableColumnConfig[];\n    rowActions?: DataTableAction<T>[];\n    isMultiSelect?: boolean;\n    multiSelectActions?: DataTableAction<T>[];\n    rowActionsWidth?: string;\n\n    /**\n     * Optional custom attribute to bind to table header, cell and action elements.\n     * Ex. <p hh-custom-attribute=\"row1_name\">Hello world</p>\n     */\n    customAttribute?: string;\n\n    /* The property key used to uniquely identify data elements. */\n    rowIdentifierProperty?: string;\n\n    /* If provided, used to generate custom attribute values for action buttons */\n    actionCustomAttributeValue?: (row: T, action: DataTableAction<T>) => string;\n\n    data?: Observable<T[]>;\n    tableHeight?: string;\n    headerRowClass?: string;\n    trackByFn?: (index: number, row: T) => any;\n    hasGlobalFilter?: boolean;\n    zeroStateMessage?: string;\n    isMasterDetail?: boolean;\n}\n\nexport interface DataTableColumnConfig {\n    property: string;\n    isHidden?: boolean;\n    isSortable?: boolean;\n    width?: string;\n    name?: string; // Uppercased 'property' by default\n    isAsync?: boolean;\n}\n\nexport interface DataTableAction<T> {\n    id: string;\n    onClick: (row: T, event: MouseEvent) => Observable<T> | void;\n    actionColor?: 'primary' | 'accent' | 'warn';\n    actionText?: string;\n    isIcon?: boolean;\n    icon?: string;\n    isActionVisible?: (row?: T) => boolean;\n    minWidth?: string;\n    tooltip?: {\n        text: string;\n        position?: TooltipPosition;\n    };\n}\n\nexport interface DataTableSortConfig {\n    column: DataTableColumnConfig;\n    direction: 'ascending' | 'descending';\n}\n",
            "properties": [
                {
                    "name": "actionColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"accent\" | \"warn\"",
                    "optional": true,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "actionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "isActionVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "isIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "minWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 50
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataTableColumnConfig",
            "id": "interface-DataTableColumnConfig-30040c380fa120b12ab20a74606dcdca1ba94d42e8a3b2b94e254e7f350faf6e13607838164a0dba269ec1a829106c087bbcb1a17999c7504de51358ef8bed55",
            "file": "projects/hammerhead-ui/src/lib/interfaces/data-table-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TooltipPosition } from '@angular/material/tooltip';\nimport { Observable } from 'rxjs';\n\nexport interface DataTableConfig<T = any> {\n    columns: DataTableColumnConfig[];\n    rowActions?: DataTableAction<T>[];\n    isMultiSelect?: boolean;\n    multiSelectActions?: DataTableAction<T>[];\n    rowActionsWidth?: string;\n\n    /**\n     * Optional custom attribute to bind to table header, cell and action elements.\n     * Ex. <p hh-custom-attribute=\"row1_name\">Hello world</p>\n     */\n    customAttribute?: string;\n\n    /* The property key used to uniquely identify data elements. */\n    rowIdentifierProperty?: string;\n\n    /* If provided, used to generate custom attribute values for action buttons */\n    actionCustomAttributeValue?: (row: T, action: DataTableAction<T>) => string;\n\n    data?: Observable<T[]>;\n    tableHeight?: string;\n    headerRowClass?: string;\n    trackByFn?: (index: number, row: T) => any;\n    hasGlobalFilter?: boolean;\n    zeroStateMessage?: string;\n    isMasterDetail?: boolean;\n}\n\nexport interface DataTableColumnConfig {\n    property: string;\n    isHidden?: boolean;\n    isSortable?: boolean;\n    width?: string;\n    name?: string; // Uppercased 'property' by default\n    isAsync?: boolean;\n}\n\nexport interface DataTableAction<T> {\n    id: string;\n    onClick: (row: T, event: MouseEvent) => Observable<T> | void;\n    actionColor?: 'primary' | 'accent' | 'warn';\n    actionText?: string;\n    isIcon?: boolean;\n    icon?: string;\n    isActionVisible?: (row?: T) => boolean;\n    minWidth?: string;\n    tooltip?: {\n        text: string;\n        position?: TooltipPosition;\n    };\n}\n\nexport interface DataTableSortConfig {\n    column: DataTableColumnConfig;\n    direction: 'ascending' | 'descending';\n}\n",
            "properties": [
                {
                    "name": "isAsync",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "isHidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "isSortable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "property",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 36
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataTableConfig",
            "id": "interface-DataTableConfig-30040c380fa120b12ab20a74606dcdca1ba94d42e8a3b2b94e254e7f350faf6e13607838164a0dba269ec1a829106c087bbcb1a17999c7504de51358ef8bed55",
            "file": "projects/hammerhead-ui/src/lib/interfaces/data-table-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TooltipPosition } from '@angular/material/tooltip';\nimport { Observable } from 'rxjs';\n\nexport interface DataTableConfig<T = any> {\n    columns: DataTableColumnConfig[];\n    rowActions?: DataTableAction<T>[];\n    isMultiSelect?: boolean;\n    multiSelectActions?: DataTableAction<T>[];\n    rowActionsWidth?: string;\n\n    /**\n     * Optional custom attribute to bind to table header, cell and action elements.\n     * Ex. <p hh-custom-attribute=\"row1_name\">Hello world</p>\n     */\n    customAttribute?: string;\n\n    /* The property key used to uniquely identify data elements. */\n    rowIdentifierProperty?: string;\n\n    /* If provided, used to generate custom attribute values for action buttons */\n    actionCustomAttributeValue?: (row: T, action: DataTableAction<T>) => string;\n\n    data?: Observable<T[]>;\n    tableHeight?: string;\n    headerRowClass?: string;\n    trackByFn?: (index: number, row: T) => any;\n    hasGlobalFilter?: boolean;\n    zeroStateMessage?: string;\n    isMasterDetail?: boolean;\n}\n\nexport interface DataTableColumnConfig {\n    property: string;\n    isHidden?: boolean;\n    isSortable?: boolean;\n    width?: string;\n    name?: string; // Uppercased 'property' by default\n    isAsync?: boolean;\n}\n\nexport interface DataTableAction<T> {\n    id: string;\n    onClick: (row: T, event: MouseEvent) => Observable<T> | void;\n    actionColor?: 'primary' | 'accent' | 'warn';\n    actionText?: string;\n    isIcon?: boolean;\n    icon?: string;\n    isActionVisible?: (row?: T) => boolean;\n    minWidth?: string;\n    tooltip?: {\n        text: string;\n        position?: TooltipPosition;\n    };\n}\n\nexport interface DataTableSortConfig {\n    column: DataTableColumnConfig;\n    direction: 'ascending' | 'descending';\n}\n",
            "properties": [
                {
                    "name": "actionCustomAttributeValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableColumnConfig[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "customAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Optional custom attribute to bind to table header, cell and action elements.\nEx. <p hh-custom-attribute=\"row1_name\">Hello world</p></p>\n",
                    "line": 15,
                    "rawdescription": "\n\nOptional custom attribute to bind to table header, cell and action elements.\nEx. <p hh-custom-attribute=\"row1_name\">Hello world</p>\n"
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<T[]>",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "hasGlobalFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "headerRowClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isMasterDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isMultiSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "multiSelectActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableAction<T>[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "rowActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableAction<T>[]",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "rowActionsWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "rowIdentifierProperty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "tableHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "trackByFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "zeroStateMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataTableSortConfig",
            "id": "interface-DataTableSortConfig-30040c380fa120b12ab20a74606dcdca1ba94d42e8a3b2b94e254e7f350faf6e13607838164a0dba269ec1a829106c087bbcb1a17999c7504de51358ef8bed55",
            "file": "projects/hammerhead-ui/src/lib/interfaces/data-table-config.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TooltipPosition } from '@angular/material/tooltip';\nimport { Observable } from 'rxjs';\n\nexport interface DataTableConfig<T = any> {\n    columns: DataTableColumnConfig[];\n    rowActions?: DataTableAction<T>[];\n    isMultiSelect?: boolean;\n    multiSelectActions?: DataTableAction<T>[];\n    rowActionsWidth?: string;\n\n    /**\n     * Optional custom attribute to bind to table header, cell and action elements.\n     * Ex. <p hh-custom-attribute=\"row1_name\">Hello world</p>\n     */\n    customAttribute?: string;\n\n    /* The property key used to uniquely identify data elements. */\n    rowIdentifierProperty?: string;\n\n    /* If provided, used to generate custom attribute values for action buttons */\n    actionCustomAttributeValue?: (row: T, action: DataTableAction<T>) => string;\n\n    data?: Observable<T[]>;\n    tableHeight?: string;\n    headerRowClass?: string;\n    trackByFn?: (index: number, row: T) => any;\n    hasGlobalFilter?: boolean;\n    zeroStateMessage?: string;\n    isMasterDetail?: boolean;\n}\n\nexport interface DataTableColumnConfig {\n    property: string;\n    isHidden?: boolean;\n    isSortable?: boolean;\n    width?: string;\n    name?: string; // Uppercased 'property' by default\n    isAsync?: boolean;\n}\n\nexport interface DataTableAction<T> {\n    id: string;\n    onClick: (row: T, event: MouseEvent) => Observable<T> | void;\n    actionColor?: 'primary' | 'accent' | 'warn';\n    actionText?: string;\n    isIcon?: boolean;\n    icon?: string;\n    isActionVisible?: (row?: T) => boolean;\n    minWidth?: string;\n    tooltip?: {\n        text: string;\n        position?: TooltipPosition;\n    };\n}\n\nexport interface DataTableSortConfig {\n    column: DataTableColumnConfig;\n    direction: 'ascending' | 'descending';\n}\n",
            "properties": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableColumnConfig",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"ascending\" | \"descending\"",
                    "optional": false,
                    "description": "",
                    "line": 58
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DisplayValuePair",
            "id": "interface-DisplayValuePair-52561c62868064059c4d24fbc26dc2f4a28a2df4835d464770198c6210ca2faf73fedb7eb13052b16494ffe35138c50a3dbfb919c396b770173d5752a1d3f08e",
            "file": "projects/hammerhead-ui/src/lib/interfaces/display-value-pair.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DisplayValuePair<T = any> {\n    display: string;\n    value: T;\n}\n",
            "properties": [
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SystemToken",
            "id": "interface-SystemToken-0d8193b9dd27993f30ba1405ede93ca522b30486658a3daf4ac341390781a2e756d9ce1debbbe6f6c00a28f6e34593ac586018a0564026c1a9bb1c3e2e1866bb",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/data-table.dummy-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SystemToken {\n    id: string;\n    token: string;\n}\n\nexport const DUMMY_TABLE_DATA: { tokens: SystemToken[] } = {\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n};\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TimelineDate",
            "id": "interface-TimelineDate-61df384c33b1ba0c340b0fafbd29fcbbb8f276daad4e573417b0584417a042cbc7e7e5b4fe18df1d734f2d367d1222938d2e6f070a102ec71e5ab2a0d57d5020",
            "file": "projects/hammerhead-ui/src/lib/interfaces/timeline-date.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TimelineDate<T = any> {\n    date: Date;\n    data?: T;\n    displayFormatter?: (date: Date, data?: T) => string;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "displayFormatter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ProximityDialogService",
            "id": "injectable-ProximityDialogService-6471a67e54e400e7664a52848b63dfc1abdf2d95f0e5ef291b2d567cbb194e3c47a5f3c62103f48006eed224c085029bb8aae236f51ddd4d2946e464b5a45546",
            "file": "projects/hammerhead-ui/src/lib/services/proximity-dialog/proximity-dialog.service.ts",
            "properties": [
                {
                    "name": "OVERLAY_CONFIG",
                    "defaultValue": "{\n        disposeOnNavigation: true,\n        maxHeight: '100vh',\n        maxWidth: '100vw',\n        hasBackdrop: true\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OverlayConfig",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121,
                        124,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "component",
                            "type": "ComponentType<DataDialog<T>>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "anchorEl",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "position",
                            "type": "ConnectedPosition",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{\n            originX: 'end',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'top'\n        }"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T | boolean>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a dialog near the anchorEl. Type `T` is the data\nstructure returned by the dialog component when it closes.\n",
                    "description": "<p>Creates a dialog near the anchorEl. Type <code>T</code> is the data\nstructure returned by the dialog component when it closes.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "ComponentType<DataDialog<T>>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "anchorEl",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "position",
                            "type": "ConnectedPosition",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{\n            originX: 'end',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'top'\n        }",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ConnectedPosition, Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ComponentPortal, ComponentType } from '@angular/cdk/portal';\nimport { Injectable } from '@angular/core';\nimport { merge, Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\nimport { DataDialog } from '../../interfaces/data-dialog.interface';\n\n@Injectable()\nexport class ProximityDialogService {\n    private static readonly OVERLAY_CONFIG: OverlayConfig = {\n        disposeOnNavigation: true,\n        maxHeight: '100vh',\n        maxWidth: '100vw',\n        hasBackdrop: true\n    };\n\n    constructor(private overlay: Overlay) {}\n\n    /**\n     * Creates a dialog near the anchorEl. Type `T` is the data\n     * structure returned by the dialog component when it closes.\n     */\n    public open<T = any>(\n        component: ComponentType<DataDialog<T>>,\n        anchorEl: HTMLElement,\n        data?: any,\n        position: ConnectedPosition = {\n            originX: 'end',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'top'\n        }\n    ): Observable<T | boolean> {\n        const overlayRef = this.overlay.create({\n            ...ProximityDialogService.OVERLAY_CONFIG,\n            positionStrategy: this.overlay\n                .position()\n                .flexibleConnectedTo(anchorEl)\n                .withPositions([position]),\n            scrollStrategy: this.overlay.scrollStrategies.block()\n        });\n\n        const dialog = overlayRef.attach(new ComponentPortal(component));\n        dialog.instance.data = data;\n\n        return merge(overlayRef.backdropClick().pipe(map(() => false)), dialog.instance.onClose.asObservable()).pipe(\n            take(1),\n            tap(() => overlayRef.dispose())\n        );\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-6f6ddccb8dac086d8653d3e9647b16eb9a8a76906d1f6c29aa304402f66a693b61f6022368d7207105b1111fa2ef1a2095fce40ee94d442e9905ca97ac305561",
            "file": "projects/hammerhead-ui-app/e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise<any>;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DataTableSource",
            "id": "class-DataTableSource-96b21a42618b531002b4dad2c9a9caed603fd357edd77274e7c461e57e8e7722a3dfe68a7bd090facfe1d234f5dd3d466d59e971ad4aa3ef7f6403d4d9714bc9",
            "file": "projects/hammerhead-ui/src/lib/components/data-table/data-table-source.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/table';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, shareReplay, takeUntil, tap } from 'rxjs/operators';\nimport { DataTableColumnConfig } from '../../interfaces';\n\nexport class DataTableSource<T = any> extends DataSource<T> {\n    private readonly DATA_SOURCE_DESTROYED$ = new Subject<void>();\n\n    public filterString$ = new BehaviorSubject<string>('');\n    public filterString = '';\n    public sortColumn: DataTableColumnConfig = null;\n    public sortColumn$ = new BehaviorSubject<DataTableColumnConfig>(this.sortColumn);\n    public sortDirection: 'ascending' | 'descending' = 'ascending';\n\n    private filteredData = combineLatest(\n        this.DATA,\n        this.filterString$.pipe(\n            debounceTime(500),\n            tap(filter => (this.filterString = filter))\n        ),\n        this.sortColumn$.pipe(\n            tap(column => {\n                if (column === null || column.isAsync) {\n                    return;\n                }\n                if (\n                    this.sortColumn &&\n                    this.sortColumn.property === column.property &&\n                    this.sortDirection === 'ascending'\n                ) {\n                    this.sortDirection = 'descending';\n                } else if (\n                    this.sortColumn &&\n                    this.sortColumn.property === column.property &&\n                    this.sortDirection === 'descending'\n                ) {\n                    this.sortColumn = null;\n                    this.sortDirection = 'ascending';\n                } else if (this.sortColumn === null || this.sortColumn.property !== column.property) {\n                    this.sortColumn = column;\n                    this.sortDirection = 'ascending';\n                    return;\n                }\n            })\n        )\n    ).pipe(\n        takeUntil(this.DATA_SOURCE_DESTROYED$),\n        /* Filtering step */\n        map(([d, filter]) =>\n            filter && typeof filter === 'string' && filter.trim().length > 0\n                ? d.filter(\n                      dEl =>\n                          Object.keys(dEl || {})\n                              .map(key => dEl[key])\n                              .filter(\n                                  dElement =>\n                                      dElement &&\n                                      dElement\n                                          .toString()\n                                          .toLowerCase()\n                                          .indexOf(filter.toLowerCase()) > -1\n                              ).length > 0\n                  )\n                : d\n        ),\n        /* Sorting step */\n        map(data => {\n            if (this.sortColumn === null) {\n                return data;\n            }\n            data.sort((rowA, rowB) =>\n                rowA[this.sortColumn.property] !== rowB[this.sortColumn.property] &&\n                (this.sortDirection === 'ascending'\n                    ? rowA[this.sortColumn.property] > rowB[this.sortColumn.property]\n                    : rowA[this.sortColumn.property] < rowB[this.sortColumn.property])\n                    ? 1\n                    : -1\n            );\n            return data;\n        }),\n        /* Ensure all subscribers are sharing the same value */\n        shareReplay(1)\n    );\n\n    constructor(private readonly DATA: Observable<T[]>) {\n        super();\n    }\n\n    public connect(): Observable<T[]> {\n        return this.filteredData;\n    }\n\n    public disconnect(): void {\n        this.DATA_SOURCE_DESTROYED$.next();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "DATA",
                        "type": "Observable<T[]>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 83,
                "jsdoctags": [
                    {
                        "name": "DATA",
                        "type": "Observable<T[]>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "DATA_SOURCE_DESTROYED$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "filteredData",
                    "defaultValue": "combineLatest(\n        this.DATA,\n        this.filterString$.pipe(\n            debounceTime(500),\n            tap(filter => (this.filterString = filter))\n        ),\n        this.sortColumn$.pipe(\n            tap(column => {\n                if (column === null || column.isAsync) {\n                    return;\n                }\n                if (\n                    this.sortColumn &&\n                    this.sortColumn.property === column.property &&\n                    this.sortDirection === 'ascending'\n                ) {\n                    this.sortDirection = 'descending';\n                } else if (\n                    this.sortColumn &&\n                    this.sortColumn.property === column.property &&\n                    this.sortDirection === 'descending'\n                ) {\n                    this.sortColumn = null;\n                    this.sortDirection = 'ascending';\n                } else if (this.sortColumn === null || this.sortColumn.property !== column.property) {\n                    this.sortColumn = column;\n                    this.sortDirection = 'ascending';\n                    return;\n                }\n            })\n        )\n    ).pipe(\n        takeUntil(this.DATA_SOURCE_DESTROYED$),\n        /* Filtering step */\n        map(([d, filter]) =>\n            filter && typeof filter === 'string' && filter.trim().length > 0\n                ? d.filter(\n                      dEl =>\n                          Object.keys(dEl || {})\n                              .map(key => dEl[key])\n                              .filter(\n                                  dElement =>\n                                      dElement &&\n                                      dElement\n                                          .toString()\n                                          .toLowerCase()\n                                          .indexOf(filter.toLowerCase()) > -1\n                              ).length > 0\n                  )\n                : d\n        ),\n        /* Sorting step */\n        map(data => {\n            if (this.sortColumn === null) {\n                return data;\n            }\n            data.sort((rowA, rowB) =>\n                rowA[this.sortColumn.property] !== rowB[this.sortColumn.property] &&\n                (this.sortDirection === 'ascending'\n                    ? rowA[this.sortColumn.property] > rowB[this.sortColumn.property]\n                    : rowA[this.sortColumn.property] < rowB[this.sortColumn.property])\n                    ? 1\n                    : -1\n            );\n            return data;\n        }),\n        /* Ensure all subscribers are sharing the same value */\n        shareReplay(1)\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "filterString",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filterString$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sortColumn",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableColumnConfig",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sortColumn$",
                    "defaultValue": "new BehaviorSubject<DataTableColumnConfig>(this.sortColumn)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sortDirection",
                    "defaultValue": "'ascending'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"ascending\" | \"descending\"",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ContextmenuDirective",
            "id": "directive-ContextmenuDirective-dc4210242b308505744e2802d69f0c8671c02911330db897b5265c56fde77048a746d8a7924db23008ee96bd1323f92814a79dc8fba3dde6668cb9f585b4e7e3",
            "file": "projects/hammerhead-ui/src/lib/directives/contextmenu.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ContextmenuItem } from '../interfaces/contextmenu-item.interface';\n\ninterface ContextmenuData {\n    menuItems: ContextmenuItem[];\n    entity: any;\n}\n\n@Directive({ selector: '[hhContextmenu]', providers: [MatDialog] })\nexport class ContextmenuDirective {\n    public static readonly BACKDROP_CLASS = 'hh-contextmenu-backdrop';\n\n    @Input('hhContextmenu') public entity: any;\n    // tslint:disable-next-line: no-input-rename\n    @Input('hhContextmenuItems') public menuItems: ContextmenuItem[];\n\n    @HostListener('contextmenu', ['$event'])\n    public onRightClick(event: MouseEvent): void {\n        /* Prevent OS context menu from opening */\n        event.preventDefault();\n\n        const dialogRef = this.dialog.open(ContextmenuDialogComponent, {\n            data: { menuItems: this.menuItems, entity: this.entity },\n            position: { top: `${event.pageY}px`, left: `${event.pageX}px` },\n            panelClass: 'hh-contextmenu-panel',\n            backdropClass: ContextmenuDirective.BACKDROP_CLASS,\n            minWidth: '188px'\n        });\n\n        const destroyed$ = new Subject<void>();\n\n        merge(\n            dialogRef.afterClosed(),\n            dialogRef.componentInstance.onClose,\n            fromEvent(document.getElementsByClassName(ContextmenuDirective.BACKDROP_CLASS).item(0), 'contextmenu')\n        )\n            .pipe(takeUntil(destroyed$))\n            .subscribe(() => {\n                destroyed$.next();\n                dialogRef.close();\n            });\n    }\n\n    constructor(private dialog: MatDialog, private el: ElementRef) {\n        this.el.nativeElement.style.cursor = 'context-menu';\n    }\n}\n\n@Component({\n    selector: 'hh-contextmenu-dialog',\n    styles: [\n        `\n            .hh-contextmenu-panel mat-dialog-container {\n                padding: 4px !important;\n            }\n\n            .contextmenu-list {\n                padding-top: 0 !important;\n            }\n        `\n    ],\n    encapsulation: ViewEncapsulation.None,\n    template: `\n        <mat-action-list class=\"contextmenu-list\">\n            <div\n                *ngFor=\"let item of data.menuItems\"\n                class=\"mat-list-item\"\n                [style.padding]=\"'0 4px'\"\n                (click)=\"item.onClick(data.entity, $event); onClose.emit()\"\n                fxLayoutAlign=\"start center\"\n                fxLayoutGap=\"8px\"\n            >\n                <mat-icon *ngIf=\"item.icon\">{{ item.icon }}</mat-icon>\n                <p>{{ item.label }}</p>\n            </div>\n        </mat-action-list>\n    `\n})\nexport class ContextmenuDialogComponent {\n    public onClose = new EventEmitter<void>();\n\n    constructor(@Inject(MAT_DIALOG_DATA) public readonly data: ContextmenuData) {}\n}\n",
            "selector": "[hhContextmenu]",
            "providers": [
                {
                    "name": "MatDialog"
                }
            ],
            "inputsClass": [
                {
                    "name": "hhContextmenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "hhContextmenuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "ContextmenuItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "contextmenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30
                }
            ],
            "propertiesClass": [
                {
                    "name": "BACKDROP_CLASS",
                    "defaultValue": "'hh-contextmenu-backdrop'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        124,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onRightClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'contextmenu', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "MetadataDirective",
            "id": "directive-MetadataDirective-34b9b0f3e51d1ba57e9e9235e374ee4d450d00f4d25d8d786ede899616d16104035617e2b4b8c84f8fd507fb14d1224eee29e8b6a32eedba8aa799ccd0f110e6",
            "file": "projects/hammerhead-ui/src/lib/directives/metadata.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\n\n@Directive({\n    selector: '[hhMetadataAttribute]'\n})\nexport class MetadataDirective implements OnChanges {\n    @Input('hhMetadataAttribute') public customAttribute: string;\n    // tslint:disable-next-line: no-input-rename\n    @Input('hhMetadataValue') public attributeValue: string;\n\n    constructor(private el: ElementRef<HTMLElement>) {}\n\n    public ngOnChanges(): void {\n        this.el.nativeElement.setAttribute(this.customAttribute, this.attributeValue);\n    }\n}\n",
            "selector": "[hhMetadataAttribute]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "hhMetadataAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hhMetadataValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SearchSelectorDirective",
            "id": "directive-SearchSelectorDirective-afb5d3d84b9fab661ca733429e75bb1ff8287ccc896c56834c68f4cb53279f74448a2bef62753a6a817519723365de0ef09524001d90a4626fa185af6ed87923",
            "file": "projects/hammerhead-ui/src/lib/directives/search-selector.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ConnectedPosition } from '@angular/cdk/overlay';\nimport {\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef\n} from '@angular/core';\nimport { DataDialog, DisplayValuePair } from '../interfaces';\nimport { ProximityDialogService } from '../services/proximity-dialog/proximity-dialog.service';\n\n@Directive({ selector: '[hhSearchSelector]', providers: [ProximityDialogService] })\nexport class SearchSelectorDirective {\n    @Input('hhSearchSelector') public options: DisplayValuePair[] = [];\n    @Input() public hhSearchSelectorIsMulti = false;\n    @Input() public hhSearchSelectorSelected: DisplayValuePair[] = [];\n    @Input() public hhSearchSelectorTemplate: TemplateRef<any>;\n    @Input() public hhSearchSelectorPosition: ConnectedPosition = {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    };\n\n    @Output() public readonly hhSearchSelection = new EventEmitter<any | any[]>();\n\n    constructor(private proximityDialogService: ProximityDialogService, private el: ElementRef) {}\n\n    @HostListener('click')\n    public click(): void {\n        this.proximityDialogService\n            .open(\n                SearchSelectorDialogComponent,\n                this.el.nativeElement,\n                {\n                    title: 'Selection search',\n                    options: this.options,\n                    selectedOptions: this.hhSearchSelectorSelected,\n                    isMulti: this.hhSearchSelectorIsMulti,\n                    template: this.hhSearchSelectorTemplate\n                },\n                this.hhSearchSelectorPosition\n            )\n            .subscribe(selection => this.hhSearchSelection.emit(selection));\n    }\n}\n\n@Component({\n    selector: 'hh-source-selector-dialog',\n    template: `\n        <mat-card>\n            <hh-search-selector\n                [options]=\"data.options\"\n                [isMulti]=\"data.isMulti\"\n                [selectedOptions]=\"selections\"\n                [customTemplate]=\"data.template\"\n                (selection)=\"onSelection($event)\"\n            ></hh-search-selector>\n\n            <mat-divider *ngIf=\"data.isMulti\"></mat-divider>\n\n            <section *ngIf=\"data.isMulti\" fxLayoutAlign=\"end center\" fxLayoutGap=\"12px\" [style.margin-top.px]=\"16\">\n                <button mat-flat-button color=\"default\" (click)=\"onClose.emit(null)\">Cancel</button>\n                <button mat-flat-button color=\"primary\" (click)=\"onClose.emit(selections)\">Select</button>\n            </section>\n        </mat-card>\n    `\n})\nexport class SearchSelectorDialogComponent implements DataDialog<DisplayValuePair[]>, OnInit {\n    public data: {\n        options: DisplayValuePair[];\n        title: string;\n        isMulti: boolean;\n        selectedOptions: DisplayValuePair[];\n        template?: TemplateRef<any>;\n    } = {\n        options: [],\n        title: 'Select',\n        selectedOptions: [],\n        isMulti: false\n    };\n    public onClose = new EventEmitter<any | any[]>();\n\n    public selections: DisplayValuePair[] = [];\n\n    public ngOnInit(): void {\n        this.selections = [...this.data.selectedOptions];\n    }\n\n    public onSelection(selection: DisplayValuePair): void {\n        if (this.selections.some(sel => JSON.stringify(sel.value) === JSON.stringify(selection.value))) {\n            this.selections = this.selections.filter(\n                sel => JSON.stringify(sel.value) !== JSON.stringify(selection.value)\n            );\n        } else {\n            this.selections.unshift(selection);\n        }\n\n        if (!this.data.isMulti) {\n            this.onClose.emit(selection);\n        }\n    }\n}\n",
            "selector": "[hhSearchSelector]",
            "providers": [
                {
                    "name": "ProximityDialogService"
                }
            ],
            "inputsClass": [
                {
                    "name": "hhSearchSelector",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "DisplayValuePair[]",
                    "decorators": []
                },
                {
                    "name": "hhSearchSelectorIsMulti",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hhSearchSelectorPosition",
                    "defaultValue": "{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "ConnectedPosition",
                    "decorators": []
                },
                {
                    "name": "hhSearchSelectorSelected",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "DisplayValuePair[]",
                    "decorators": []
                },
                {
                    "name": "hhSearchSelectorTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "hhSearchSelection",
                    "defaultValue": "new EventEmitter<any | any[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "proximityDialogService",
                        "type": "ProximityDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "proximityDialogService",
                        "type": "ProximityDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6e696711dce9546ee7fc29e50c70952c415fd6c6c26d832bea2fadc48ee22eefb1718bdce064e10617bca65155e1662ddc3c30e40b8fa9a709497474e15e2c0e",
            "file": "projects/hammerhead-ui-app/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isSidenavOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sidenavMode$",
                    "defaultValue": "this.breakpointObserver\n        .observe('(min-width: 1280px)')\n        .pipe(map(result => (result.matches ? 'side' : 'over')))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BreakpointObserver } from '@angular/cdk/layout';\nimport { Component } from '@angular/core';\nimport { map, take, filter } from 'rxjs/operators';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    public readonly sidenavMode$ = this.breakpointObserver\n        .observe('(min-width: 1280px)')\n        .pipe(map(result => (result.matches ? 'side' : 'over')));\n\n    public isSidenavOpen = false;\n\n    constructor(private breakpointObserver: BreakpointObserver, private router: Router) {\n        /* On app load, determine if the sidenav should be open (desktop) or closed (hand-held device) */\n        this.sidenavMode$.pipe(take(1)).subscribe(mode => (this.isSidenavOpen = mode === 'side'));\n\n        /* On smaller viewports, close the sidenav menu after navigation */\n        combineLatest(this.router.events, this.sidenavMode$)\n            .pipe(\n                filter(\n                    ([event, sidenavMode]) =>\n                        event instanceof NavigationEnd && this.isSidenavOpen && sidenavMode === 'over'\n                )\n            )\n            .subscribe(() => (this.isSidenavOpen = false));\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n\n    ::ng-deep {\n        mat-sidenav-container {\n            background: rgba(58, 58, 58, 0.09);\n            height: calc(100% - 56px);\n            margin-top: 56px;\n            overflow: hidden;\n\n            mat-sidenav {\n                width: 312px;\n            }\n\n            mat-sidenav-content {\n                box-sizing: border-box;\n                padding: 24px;\n            }\n        }\n\n        mat-card {\n            margin: 12px;\n        }\n    }\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-top-nav\n    class=\"mat-elevation-z4\"\n    (menuToggle)=\"sidenav.toggle()\"\n></app-top-nav>\n\n<mat-sidenav-container>\n    <mat-sidenav\n        #sidenav\n        [mode]=\"sidenavMode$ | async\"\n        [(opened)]=\"isSidenavOpen\"\n    >\n        <app-side-nav></app-side-nav>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ComponentsOverviewComponent",
            "id": "component-ComponentsOverviewComponent-06c6fd4f43f597666cda833ccc830020a3041d3420e7f908d3c11f4747cb5a790573ecbcc7037d8fbf96691d46178c76a6f50ad322fdac4d3064ec99e8287ccd",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/components-overview/components-overview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-components-overview",
            "styleUrls": [
                "./components-overview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./components-overview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-components-overview',\n    templateUrl: './components-overview.component.html',\n    styleUrls: ['./components-overview.component.scss']\n})\nexport class ComponentsOverviewComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./components-overview.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>components-overview works!</p>\n"
        },
        {
            "name": "ContextMenuDemoComponent",
            "id": "component-ContextMenuDemoComponent-61ecfe705206e28f0a74eefd0f9450f56d1fa1e60e28da82f7c21dc123371bf15d63f90e03c0046ee2a1dd572cd380ca78beb4670755dbdfbb892b9b10279e3c",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/context-menu-demo/context-menu-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-context-menu-demo",
            "styleUrls": [
                "./context-menu-demo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./context-menu-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-context-menu-demo',\n    templateUrl: './context-menu-demo.component.html',\n    styleUrls: ['./context-menu-demo.component.scss']\n})\nexport class ContextMenuDemoComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./context-menu-demo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-demo\n    title=\"Context Menu\"\n    description=\"A right-click menu\"\n    [interfaceUrls]=\"['projects/hammerhead-ui/src/lib/interfaces/contextmenu-item.interface.ts']\"\n    tsSourceUrl=\"projects/hammerhead-ui/src/lib/directives/contextmenu.directive.ts\"\n>\n    <app-demo-example\n        class=\"margin-bottom-heavy\"\n        description=\"Basic context menu\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/context-menu-demo/examples/context-menu-example-a/context-menu-example-a.component.ts\"\n    >\n        <app-context-menu-example-a></app-context-menu-example-a>\n    </app-demo-example>\n</app-demo>\n"
        },
        {
            "name": "ContextmenuDialogComponent",
            "id": "component-ContextmenuDialogComponent-dc4210242b308505744e2802d69f0c8671c02911330db897b5265c56fde77048a746d8a7924db23008ee96bd1323f92814a79dc8fba3dde6668cb9f585b4e7e3",
            "file": "projects/hammerhead-ui/src/lib/directives/contextmenu.directive.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "hh-contextmenu-dialog",
            "styleUrls": [],
            "styles": [
                "\n            .hh-contextmenu-panel mat-dialog-container {\n                padding: 4px !important;\n            }\n\n            .contextmenu-list {\n                padding-top: 0 !important;\n            }\n        "
            ],
            "template": "<mat-action-list class=\"contextmenu-list\">\n    <div\n        *ngFor=\"let item of data.menuItems\"\n        class=\"mat-list-item\"\n        [style.padding]=\"'0 4px'\"\n        (click)=\"item.onClick(data.entity, $event); onClose.emit()\"\n        fxLayoutAlign=\"start center\"\n        fxLayoutGap=\"8px\"\n    >\n        <mat-icon *ngIf=\"item.icon\">{{ item.icon }}</mat-icon>\n        <p>{{ item.label }}</p>\n    </div>\n</mat-action-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContextmenuData",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ContextmenuItem } from '../interfaces/contextmenu-item.interface';\n\ninterface ContextmenuData {\n    menuItems: ContextmenuItem[];\n    entity: any;\n}\n\n@Directive({ selector: '[hhContextmenu]', providers: [MatDialog] })\nexport class ContextmenuDirective {\n    public static readonly BACKDROP_CLASS = 'hh-contextmenu-backdrop';\n\n    @Input('hhContextmenu') public entity: any;\n    // tslint:disable-next-line: no-input-rename\n    @Input('hhContextmenuItems') public menuItems: ContextmenuItem[];\n\n    @HostListener('contextmenu', ['$event'])\n    public onRightClick(event: MouseEvent): void {\n        /* Prevent OS context menu from opening */\n        event.preventDefault();\n\n        const dialogRef = this.dialog.open(ContextmenuDialogComponent, {\n            data: { menuItems: this.menuItems, entity: this.entity },\n            position: { top: `${event.pageY}px`, left: `${event.pageX}px` },\n            panelClass: 'hh-contextmenu-panel',\n            backdropClass: ContextmenuDirective.BACKDROP_CLASS,\n            minWidth: '188px'\n        });\n\n        const destroyed$ = new Subject<void>();\n\n        merge(\n            dialogRef.afterClosed(),\n            dialogRef.componentInstance.onClose,\n            fromEvent(document.getElementsByClassName(ContextmenuDirective.BACKDROP_CLASS).item(0), 'contextmenu')\n        )\n            .pipe(takeUntil(destroyed$))\n            .subscribe(() => {\n                destroyed$.next();\n                dialogRef.close();\n            });\n    }\n\n    constructor(private dialog: MatDialog, private el: ElementRef) {\n        this.el.nativeElement.style.cursor = 'context-menu';\n    }\n}\n\n@Component({\n    selector: 'hh-contextmenu-dialog',\n    styles: [\n        `\n            .hh-contextmenu-panel mat-dialog-container {\n                padding: 4px !important;\n            }\n\n            .contextmenu-list {\n                padding-top: 0 !important;\n            }\n        `\n    ],\n    encapsulation: ViewEncapsulation.None,\n    template: `\n        <mat-action-list class=\"contextmenu-list\">\n            <div\n                *ngFor=\"let item of data.menuItems\"\n                class=\"mat-list-item\"\n                [style.padding]=\"'0 4px'\"\n                (click)=\"item.onClick(data.entity, $event); onClose.emit()\"\n                fxLayoutAlign=\"start center\"\n                fxLayoutGap=\"8px\"\n            >\n                <mat-icon *ngIf=\"item.icon\">{{ item.icon }}</mat-icon>\n                <p>{{ item.label }}</p>\n            </div>\n        </mat-action-list>\n    `\n})\nexport class ContextmenuDialogComponent {\n    public onClose = new EventEmitter<void>();\n\n    constructor(@Inject(MAT_DIALOG_DATA) public readonly data: ContextmenuData) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            .hh-contextmenu-panel mat-dialog-container {\n                padding: 4px !important;\n            }\n\n            .contextmenu-list {\n                padding-top: 0 !important;\n            }\n        \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "ContextmenuData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 92,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "ContextmenuData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ContextMenuExampleAComponent",
            "id": "component-ContextMenuExampleAComponent-230995a5f56ff2c883781ff93449422504a422074774ae98ede7fde93abe7d1bce2d97805ac1415daa6702d3659ee2ac8163c5335db47015f864b239dbbe08c5",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/context-menu-demo/examples/context-menu-example-a/context-menu-example-a.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-context-menu-example-a",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card>\n    <mat-list>\n        <mat-list-item *ngFor=\"let dog of dogs\" [hhContextmenu]=\"dog\" [hhContextmenuItems]=\"menuItems\">\n            {{ dog }}\n        </mat-list-item>\n    </mat-list>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dogs",
                    "defaultValue": "['Bulldog', 'Lab', 'Mastiff', 'Schnauzer']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[\n        {\n            label: 'Like',\n            icon: 'thumb_up',\n            onClick: dog => this.snackBar.open(`You like ${dog}s!`, undefined, { duration: 3000 })\n        },\n        {\n            label: 'Dislike',\n            icon: 'thumb_down',\n            onClick: dog => this.snackBar.open(`Uh-oh, you don't like ${dog}s...`, undefined, { duration: 3000 })\n        }\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContextmenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ContextmenuItem } from 'projects/hammerhead-ui/src/lib/interfaces/contextmenu-item.interface';\n\n@Component({\n    selector: 'app-context-menu-example-a',\n    template: `\n        <mat-card>\n            <mat-list>\n                <mat-list-item *ngFor=\"let dog of dogs\" [hhContextmenu]=\"dog\" [hhContextmenuItems]=\"menuItems\">\n                    {{ dog }}\n                </mat-list-item>\n            </mat-list>\n        </mat-card>\n    `\n})\nexport class ContextMenuExampleAComponent {\n    public dogs = ['Bulldog', 'Lab', 'Mastiff', 'Schnauzer'];\n\n    public menuItems: ContextmenuItem[] = [\n        {\n            label: 'Like',\n            icon: 'thumb_up',\n            onClick: dog => this.snackBar.open(`You like ${dog}s!`, undefined, { duration: 3000 })\n        },\n        {\n            label: 'Dislike',\n            icon: 'thumb_down',\n            onClick: dog => this.snackBar.open(`Uh-oh, you don't like ${dog}s...`, undefined, { duration: 3000 })\n        }\n    ];\n\n    constructor(private snackBar: MatSnackBar) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DataTableComponent",
            "id": "component-DataTableComponent-7dc2fcea84b9615ea9dbfa364975089f1a575421e8d439eb7f818a4f4083ec27ba9b3c62f0af0c83a47da5c03217c8b9e7bf1ade2702d8d1a4a80f92f9ffb4ba",
            "file": "projects/hammerhead-ui/src/lib/components/data-table/data-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "hh-data-table",
            "styleUrls": [
                "./data-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./data-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionTemplates",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "cellTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "cellTemplates",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "DataTableConfig",
                    "decorators": []
                },
                {
                    "name": "detailsTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "zeroStateTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selection",
                    "defaultValue": "new EventEmitter<any[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "areAllRowsSelected$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cols",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableSource",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "DEFAULT_CUSTOM_ATTRIBUTE",
                    "defaultValue": "'hh-data-table-element'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "DEFAULT_TABLE_HEIGHT",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "DETAIL_TOGGLE_COLUMN_WIDTH",
                    "defaultValue": "'36px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121,
                        124,
                        144
                    ]
                },
                {
                    "name": "details",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inputFilterString",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "masterDetailState",
                    "defaultValue": "MasterDetailState.MasterShow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "MULTI_SELECT_COLUMN_WIDTH",
                    "defaultValue": "'36px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121,
                        124,
                        144
                    ]
                },
                {
                    "name": "rowSelectionEvents$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectionCache",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "filterString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "filterString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clearFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "clearSelectionCache",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "deselectRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getColumn",
                    "args": [
                        {
                            "name": "columnName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DataTableColumnConfig",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "columnName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getColumnWidth",
                    "args": [
                        {
                            "name": "columnProperty",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "columnProperty",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isRowSelected",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onQuitDetails",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onRowSelection",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onViewDetails",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleRowSelection",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleRowSelectionAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggleSort",
                    "args": [
                        {
                            "name": "column",
                            "type": "DataTableColumnConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "DataTableColumnConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateData",
                    "args": [],
                    "optional": false,
                    "returnType": "DataTableSource",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateTable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, Output, TemplateRef } from '@angular/core';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DataTableColumnConfig, DataTableConfig } from '../../interfaces';\nimport { DataTableSource } from './data-table-source.class';\nimport { dataTableAnimations, MasterDetailState } from './data-table.animations';\n\n@Component({\n    selector: 'hh-data-table',\n    templateUrl: './data-table.component.html',\n    styleUrls: ['./data-table.component.scss'],\n    animations: [dataTableAnimations.masterDetailSlide],\n})\nexport class DataTableComponent implements OnChanges {\n    private static readonly DETAIL_TOGGLE_COLUMN_WIDTH = '36px';\n    private static readonly MULTI_SELECT_COLUMN_WIDTH = '36px';\n    public readonly DEFAULT_TABLE_HEIGHT = 'auto';\n    public readonly DEFAULT_CUSTOM_ATTRIBUTE = 'hh-data-table-element';\n\n    @Input() public config: DataTableConfig;\n    @Input() public headerTemplate: TemplateRef<any>;\n    @Input() public cellTemplate: TemplateRef<any>;\n    @Input() public cellTemplates: { [columnProp: string]: TemplateRef<any> } = {};\n    @Input() public actionTemplates: { [actionId: string]: TemplateRef<any> } = {};\n    @Input() public detailsTemplate: TemplateRef<any>;\n    @Input() public zeroStateTemplate: TemplateRef<any>;\n\n    @Output() public selection = new EventEmitter<any[]>();\n\n    public cols: string[] = [];\n    public data: DataTableSource;\n    public details: any = null;\n    public masterDetailState = MasterDetailState.MasterShow;\n    public inputFilterString = '';\n    public areAllRowsSelected$: Observable<boolean>;\n    public selectionCache = [];\n\n    private rowSelectionEvents$ = new Subject<void>();\n\n    public ngOnChanges(): void {\n        this.updateTable();\n    }\n\n    public applyFilter(filterString: string): void {\n        if (this.data) {\n            this.data.filterString$.next(filterString);\n        }\n    }\n\n    public clearFilters(): void {\n        if (this.data) {\n            this.data.filterString$.next('');\n        }\n    }\n\n    public clearSelectionCache(): void {\n        this.selectionCache = [];\n        this.rowSelectionEvents$.next();\n        this.selection.emit(this.selectionCache);\n    }\n\n    public deselectRow(row: any): void {\n        if (this.config.isMultiSelect) {\n            this.selectionCache = this.selectionCache.filter(\n                (r) => this.config.trackByFn(0, r) !== this.config.trackByFn(0, row)\n            );\n            this.rowSelectionEvents$.next();\n            this.selection.emit(this.selectionCache);\n        }\n    }\n\n    public getColumn(columnName: string): DataTableColumnConfig {\n        return this.config.columns.find((col) => col.property === columnName);\n    }\n\n    public getColumnWidth(columnProperty: string): string | undefined {\n        if (columnProperty === 'multi') {\n            return DataTableComponent.MULTI_SELECT_COLUMN_WIDTH;\n        }\n\n        if (columnProperty === 'actions') {\n            return this.config.rowActionsWidth;\n        }\n\n        if (columnProperty === 'details') {\n            return DataTableComponent.DETAIL_TOGGLE_COLUMN_WIDTH;\n        }\n\n        const column = this.config.columns.find((col) => col.property === columnProperty);\n        return column ? column.width : undefined;\n    }\n\n    public isRowSelected(row: any, index: number): boolean {\n        return this.selectionCache.some((r) => this.config.trackByFn(index, r) === this.config.trackByFn(index, row));\n    }\n\n    public onQuitDetails(): void {\n        this.details = null;\n        this.masterDetailState = MasterDetailState.MasterShow;\n    }\n\n    public onRowSelection(row: any): void {\n        if (this.config.isMasterDetail) {\n            this.onViewDetails(row);\n        }\n    }\n\n    public onViewDetails(row: any): void {\n        this.details = { ...row };\n        this.masterDetailState = MasterDetailState.DetailsShow;\n    }\n\n    public toggleRowSelection(row: any, index: number): void {\n        if (this.isRowSelected(row, index)) {\n            this.selectionCache = this.selectionCache.filter(\n                (r, i) => this.config.trackByFn(i, r) !== this.config.trackByFn(index, row)\n            );\n        } else {\n            this.selectionCache.splice(index, 0, row);\n        }\n\n        this.rowSelectionEvents$.next();\n        this.selection.emit(this.selectionCache);\n    }\n\n    public toggleRowSelectionAll(): void {\n        this.data\n            .connect()\n            .pipe(take(1))\n            .subscribe((rows) => {\n                const selectable = rows.filter(row => !row.selectionDisabled);\n                if (this.selectionCache.length < selectable.length) {\n                    this.selectionCache = selectable;\n                } else {\n                    this.selectionCache = [];\n                }\n                this.selection.emit(this.selectionCache);\n            });\n    }\n\n    public toggleSort(column: DataTableColumnConfig): void {\n        if (!column.isSortable) {\n            return;\n        }\n\n        this.data.sortColumn$.next(column);\n    }\n\n    private buildColumns(): string[] {\n        let cols = this.config.columns.map((column) => column.property);\n        if (this.config.isMultiSelect && Array.isArray(this.config.multiSelectActions)) {\n            cols = ['multi', ...cols];\n        }\n        if (this.config.isMasterDetail) {\n            cols = ['details', ...cols];\n        }\n        if (this.config.rowActions && Array.isArray(this.config.rowActions) && this.config.rowActions.length > 0) {\n            cols = [...cols, 'actions'];\n        }\n        return cols;\n    }\n\n    private updateData(): DataTableSource {\n        return new DataTableSource(this.config.data);\n    }\n\n    private updateTable() {\n        this.cols = this.buildColumns();\n        this.data = this.updateData();\n\n        this.areAllRowsSelected$ = combineLatest(this.data.connect(), this.rowSelectionEvents$).pipe(\n            map(([rows]) => rows.length > 0 && rows.length === this.selectionCache.length)\n        );\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    box-sizing: border-box;\n    display: block;\n    overflow-x: hidden;\n    width: 100%;\n\n    ::ng-deep .mat-icon-button {\n        width: 24px;\n    }\n\n    ::ng-deep .mat-flat-button {\n        box-sizing: content-box;\n    }\n\n    .cursor-pointer {\n        cursor: pointer !important;\n\n        &:active {\n            opacity: 0.5;\n        }\n    }\n\n    mat-icon.back-arrow {\n        font-size: 48px;\n        line-height: 48px;\n        height: 48px;\n        width: 48px;\n    }\n\n    cdk-table {\n        display: block;\n        overflow-y: auto;\n        width: 100%;\n        will-change: transform; // To minimize scroll jank\n\n        cdk-row {\n            border-bottom: 1px solid rgba(58, 58, 58, 0.18);\n            padding: 8px 0;\n\n            &:hover {\n                border-bottom: 1px solid rgba(58, 58, 58, 0.66);\n            }\n        }\n\n        cdk-header-row {\n            background: white;\n            border-bottom: 1px solid rgba(58, 58, 58, 0.33);\n            padding: 12px 0;\n            position: sticky;\n            top: 0;\n            z-index: 1;\n\n            p {\n                font-size: 12px;\n                font-weight: 700;\n                line-height: 24px;\n                margin: 0;\n            }\n        }\n    }\n\n    .wrapper__master-detail {\n        width: 200%;\n    }\n\n    .wrapper__table {\n        position: relative;\n    }\n\n    .wrapper__no-results {\n        position: absolute;\n        top: 64px;\n        width: 100%;\n    }\n}\n",
                    "styleUrl": "./data-table.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"data.connect() | async as tableData; else loading;\">\n    <section\n        fxLayoutAlign=\"start center\"\n        fxLayoutGap=\"16px\"\n    >\n        <mat-form-field\n            *ngIf=\"config.hasGlobalFilter\"\n            fxFlex=\"100%\"\n        >\n            <input\n                #searchFilter\n                matInput\n                (keyup)=\"applyFilter($any($event.target).value)\"\n                placeholder=\"Filter\"\n                [ngModel]=\"data.filterString\"\n                [disabled]=\"masterDetailState === 'details-show'\"\n            >\n        </mat-form-field>\n\n        <ng-container *ngIf=\"config.isMultiSelect\">\n            <ng-container *ngFor=\"let action of config.multiSelectActions\">\n                <ng-container *ngIf=\"action.isIcon; else multiActionButton;\">\n                    <button\n                        *ngIf=\"!action.isActionVisible || action.isActionVisible()\"\n                        mat-icon-button\n                        [color]=\"action.actionColor || 'primary'\"\n                        (click)=\"$event.stopPropagation(); action.onClick(selectionCache, $event); clearSelectionCache();\"\n                        [hhMetadataAttribute]=\"config.customAttribute || DEFAULT_CUSTOM_ATTRIBUTE\"\n                        [hhMetadataValue]=\"'multi-action_' + action.id\"\n                        [disabled]=\"selectionCache.length < 1 || masterDetailState === 'details-show'\"\n                        [matTooltip]=\"action?.tooltip?.text\"\n                        [matTooltipPosition]=\"action?.tooltip?.position || 'below'\"\n                        disableRipple\n                        class=\"cursor-pointer\"\n                    >\n                        <mat-icon>{{ action.icon || 'edit' }}</mat-icon>\n                    </button>\n                </ng-container>\n                <ng-template #multiActionButton>\n                    <button\n                        *ngIf=\"!action.isActionVisible || action.isActionVisible()\"\n                        mat-flat-button\n                        [color]=\"action.actionColor || 'primary'\"\n                        (click)=\"$event.stopPropagation(); action.onClick(selectionCache, $event); clearSelectionCache();\"\n                        [hhMetadataAttribute]=\"config.customAttribute || DEFAULT_CUSTOM_ATTRIBUTE\"\n                        [hhMetadataValue]=\"'multi-action_' + action.id\"\n                        [disabled]=\"selectionCache.length < 1 || masterDetailState === 'details-show'\"\n                        [style.min-width]=\"action.minWidth\"\n                        [matTooltip]=\"action?.tooltip?.text\"\n                        [matTooltipPosition]=\"action?.tooltip?.position || 'below'\"\n                        disableRipple\n                        class=\"cursor-pointer\"\n                    >\n                        {{ action.actionText | titlecase }}\n                    </button>\n                </ng-template>\n            </ng-container>\n        </ng-container>\n    </section>\n\n    <!-- Master/detail container -->\n    <section\n        class=\"wrapper__master-detail\"\n        fxLayoutAlign=\"start start\"\n        [@masterDetailSlide]=\"{ value: masterDetailState }\"\n    >\n        <div\n            fxFlex=\"50%\"\n            class=\"wrapper__table\"\n        >\n            <cdk-table\n                [class.invisible]=\"tableData.length === 0 || details\"\n                [dataSource]=\"data\"\n                [trackBy]=\"config.trackByFn\"\n                [style.height]=\"config.tableHeight || DEFAULT_TABLE_HEIGHT\"\n            >\n                <ng-container\n                    *ngFor=\"let column of cols\"\n                    [cdkColumnDef]=\"column\"\n                >\n                    <cdk-header-cell\n                        [fxFlex]=\"getColumnWidth(column) || '100%'\"\n                        *cdkHeaderCellDef\n                    >\n                        <span\n                            *ngIf=\"column !== 'details' && column !== 'multi'\"\n                            (click)=\"toggleSort(getColumn(column))\"\n                            [class.cursor-pointer]=\"getColumn(column)?.isSortable\"\n                            fxLayoutAlign=\"start center\"\n                            fxLayoutGap=\"8px\"\n                            [hhMetadataAttribute]=\"config.customAttribute || DEFAULT_CUSTOM_ATTRIBUTE\"\n                            [hhMetadataValue]=\"'header_' + column\"\n                        >\n                            <span>\n                                <ng-container *ngTemplateOutlet=\"headerTemplate || defaultHeaderTemplate; context: { $implicit: getColumn(column) };\"></ng-container>\n                            </span>\n                            <ng-template #defaultHeaderTemplate>\n                                <p>\n                                    {{ (getColumn(column)?.name || column) | uppercase }}\n                                </p>\n                            </ng-template>\n                            <mat-icon *ngIf=\"data?.sortColumn?.property === column && data?.sortDirection === 'ascending'\">keyboard_arrow_up</mat-icon>\n                            <mat-icon *ngIf=\"data?.sortColumn?.property === column && data?.sortDirection === 'descending'\">keyboard_arrow_down</mat-icon>\n                        </span>\n\n                        <mat-checkbox\n                            *ngIf=\"column === 'multi'\"\n                            [checked]=\"areAllRowsSelected$ | async\"\n                            (change)=\"toggleRowSelectionAll()\"\n                            [disabled]=\"tableData.length === 0\"\n                        ></mat-checkbox>\n                    </cdk-header-cell>\n                    <cdk-cell\n                        [fxFlex]=\"getColumnWidth(column) || '100%'\"\n                        *cdkCellDef=\"let row; let index;\"\n                    >\n                        <mat-icon\n                            *ngIf=\"column === 'details'\"\n                            class=\"cursor-pointer\"\n                            (click)=\"$event.stopPropagation(); onViewDetails(row)\"\n                            [style.width]=\"'100%'\"\n                            [hhMetadataAttribute]=\"config.customAttribute || DEFAULT_CUSTOM_ATTRIBUTE\"\n                            [hhMetadataValue]=\"'detail_toggle_' + row[config.rowIdentifierProperty || cols[1]]\"\n                        >\n                            keyboard_arrow_right\n                        </mat-icon>\n\n                        <mat-checkbox\n                            *ngIf=\"column === 'multi'\"\n                            [checked]=\"isRowSelected(row, index)\"\n                            (change)=\"toggleRowSelection(row, index)\"\n                            (click)=\"$event.stopPropagation()\"\n                            [disabled]=\"row.selectionDisabled\"\n                        ></mat-checkbox>                        \n\n                        <ng-container *ngIf=\"column !== 'actions' && column !== 'details' && column !== 'multi'\">\n                            <ng-container *ngIf=\"!cellTemplates[column]\">\n                                <ng-container *ngTemplateOutlet=\"cellTemplate; context: { $implicit: { col: getColumn(column), row: row } };\"></ng-container>\n                            </ng-container>\n                            <ng-container *ngIf=\"cellTemplates[column]\">\n                                <ng-container *ngTemplateOutlet=\"cellTemplates[column]; context: { $implicit: { col: getColumn(column), row: row } };\"></ng-container>\n                            </ng-container>\n                            <ng-container *ngIf=\"!cellTemplate && !cellTemplates[column]\">\n                                <span\n                                    [hhMetadataAttribute]=\"config.customAttribute || DEFAULT_CUSTOM_ATTRIBUTE\"\n                                    [hhMetadataValue]=\"'data_cell_' + column + '_' + row[config.rowIdentifierProperty || cols[config.isMasterDetail ? 1 : 0]]\"\n                                >\n                                    {{ getColumn(column)?.isAsync ? (row[column] | async) : row[column] }}\n                                </span>\n                            </ng-container>\n                        </ng-container>\n\n                        <div\n                            *ngIf=\"column === 'actions'\"\n                            fxLayoutAlign=\"start center\"\n                            fxLayoutGap=\"12px\"\n                        >\n                            <ng-container *ngFor=\"let action of config.rowActions\">\n                                <ng-container *ngIf=\"!action.isActionVisible || action.isActionVisible(row)\">\n                                    <ng-container *ngIf=\"actionTemplates[action.id]; else defaultActions;\">\n                                        <ng-container *ngTemplateOutlet=\"actionTemplates[action.id]; context: { $implicit: { action: action, row: row } };\"></ng-container>\n                                    </ng-container>\n                                    <ng-template #defaultActions>\n                                        <button\n                                            *ngIf=\"action.isIcon; else actionButton;\"\n                                            mat-icon-button\n                                            [color]=\"action.actionColor || 'primary'\"\n                                            (click)=\"$event.stopPropagation(); action.onClick(row, $event); deselectRow(row);\"\n                                            [hhMetadataAttribute]=\"config.customAttribute || DEFAULT_CUSTOM_ATTRIBUTE\"\n                                            [hhMetadataValue]=\"config.actionCustomAttributeValue ? config.actionCustomAttributeValue(row, action) : 'action_' + action.id + '_' + row[config.rowIdentifierProperty || cols[config.isMasterDetail ? 1 : 0]]\"\n                                            [matTooltip]=\"action?.tooltip?.text\"\n                                            [matTooltipPosition]=\"action?.tooltip?.position || 'below'\"\n                                            disableRipple\n                                            class=\"cursor-pointer\"\n                                        >\n                                            <mat-icon>{{ action.icon || 'edit' }}</mat-icon>\n                                        </button>\n                                        <ng-template #actionButton>\n                                            <button\n                                                mat-flat-button\n                                                [color]=\"action.actionColor || 'primary'\"\n                                                (click)=\"$event.stopPropagation(); action.onClick(row, $event); deselectRow(row);\"\n                                                [style.min-width]=\"action.minWidth || '64px'\"\n                                                [hhMetadataAttribute]=\"config.customAttribute || DEFAULT_CUSTOM_ATTRIBUTE\"\n                                                [hhMetadataValue]=\"config.actionCustomAttributeValue ? config.actionCustomAttributeValue(row, action) : 'action_' + action.id + '_' + row[config.rowIdentifierProperty || cols[config.isMasterDetail ? 1 : 0]]\"\n                                                [matTooltip]=\"action?.tooltip?.text\"\n                                                [matTooltipPosition]=\"action?.tooltip?.position || 'below'\"\n                                                disableRipple\n                                                class=\"cursor-pointer\"\n                                            >\n                                                {{ action.actionText | titlecase }}\n                                            </button>\n                                        </ng-template>\n                                    </ng-template>\n                                </ng-container>\n                            </ng-container>\n                        </div>\n                    </cdk-cell>\n                </ng-container>\n\n                <cdk-header-row\n                    fxLayoutAlign=\"start center\"\n                    fxLayoutGap=\"16px\"\n                    *cdkHeaderRowDef=\"cols\"\n                    [className]=\"config.headerRowClass + ' mat-elevation-z2'\"\n                ></cdk-header-row>\n                <cdk-row\n                    fxLayoutAlign=\"start center\"\n                    fxLayoutGap=\"16px\"\n                    *cdkRowDef=\"let row; columns: cols;\"\n                    (click)=\"$event.stopPropagation(); onRowSelection(row)\"\n                    [class.cursor-pointer]=\"config?.isMasterDetail\"\n                ></cdk-row>\n            </cdk-table>\n\n            <ng-container *ngIf=\"tableData.length === 0\">\n                <div\n                    fxLayoutAlign=\"center center\"\n                    [class.wrapper__no-results]=\"config.tableHeight\"\n                >\n                    <ng-container *ngTemplateOutlet=\"zeroStateTemplate || zeroStateDefault\"></ng-container>\n                    <ng-template #zeroStateDefault>\n                        <hh-zero-state\n                            [message]=\"config?.zeroStateMessage || 'No results found'\"\n                            [style.width.px]=\"320\"\n                        ></hh-zero-state>\n                    </ng-template>\n                </div>\n            </ng-container>\n        </div>\n\n        <section\n            fxFlex=\"50%\"\n            fxLayoutAlign=\"start start\"\n            fxLayoutGap=\"16px\"\n        >\n            <mat-icon\n                class=\"cursor-pointer back-arrow\"\n                (click)=\"$event.stopPropagation(); onQuitDetails()\"\n                [hhMetadataAttribute]=\"config.customAttribute || DEFAULT_CUSTOM_ATTRIBUTE\"\n                hhMetadataValue=\"detail_toggle_close\"\n            >\n                keyboard_arrow_left\n            </mat-icon>\n            <span>\n                <ng-template *ngTemplateOutlet=\"detailsTemplate; context: { $implicit: details };\"></ng-template>\n            </span>\n        </section>\n    </section>\n</ng-container>\n\n<ng-template #loading>\n    <mat-progress-bar\n        mode=\"indeterminate\"\n        class=\"margin-bottom-heavy\"\n    ></mat-progress-bar>\n    <div fxLayoutAlign=\"center center\">\n        <hh-zero-state\n            message=\"Please wait...\"\n            [style.min-width.px]=\"320\"\n        ></hh-zero-state>\n    </div>\n</ng-template>\n"
        },
        {
            "name": "DataTableDemoComponent",
            "id": "component-DataTableDemoComponent-fdf97e58c8b6386401c07700d4e88e0bfb721b61083f4ebb1fcd8745fa462256fb7895ae93d1fa3eb4dfbc446e8168cf8f1dbecbece4f48338f51ca425c418c1",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/data-table-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-demo",
            "styleUrls": [
                "./data-table-demo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./data-table-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-data-table-demo',\n    templateUrl: './data-table-demo.component.html',\n    styleUrls: ['./data-table-demo.component.scss']\n})\nexport class DataTableDemoComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./data-table-demo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-demo\n    title=\"Data Table\"\n    description=\"Displays tabular data.\"\n    tsSourceUrl=\"projects/hammerhead-ui/src/lib/components/data-table/data-table.component.ts\"\n    templateSourceUrl=\"projects/hammerhead-ui/src/lib/components/data-table/data-table.component.html\"\n>\n    <app-demo-example\n        class=\"margin-bottom-heavy\"\n        description=\"Simple table, sortable by header\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-a/data-table-example-a.component.ts\"\n    >\n        <app-data-table-example-a></app-data-table-example-a>\n    </app-demo-example>\n\n    <app-demo-example\n        class=\"margin-bottom-heavy\"\n        description=\"Simple table with async data\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-b/data-table-example-b.component.ts\"\n    >\n        <app-data-table-example-b></app-data-table-example-b>\n    </app-demo-example>\n\n    <app-demo-example\n        class=\"margin-bottom-heavy\"\n        description=\"Simple table with custom column widths\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-c/data-table-example-c.component.ts\"\n    >\n        <app-data-table-example-c></app-data-table-example-c>\n    </app-demo-example>\n\n    <app-demo-example\n        description=\"Custom column widths and icon action buttons\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-d/data-table-example-d.component.ts\"\n    >\n        <app-data-table-example-d></app-data-table-example-d>\n    </app-demo-example>\n\n    <app-demo-example\n        description=\"Table with global filter\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-e/data-table-example-e.component.ts\"\n    >\n        <app-data-table-example-e></app-data-table-example-e>\n    </app-demo-example>\n\n    <app-demo-example\n        description=\"Table with custom header and data cell templates\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-f/data-table-example-f.component.ts\"\n    >\n        <app-data-table-example-f></app-data-table-example-f>\n    </app-demo-example>\n\n    <app-demo-example\n        description=\"Table with custom zero-state template\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-g/data-table-example-g.component.ts\"\n    >\n        <app-data-table-example-g></app-data-table-example-g>\n    </app-demo-example>\n\n    <app-demo-example\n        description=\"Master/detail\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-h/data-table-example-h.component.ts\"\n    >\n        <app-data-table-example-h></app-data-table-example-h>\n    </app-demo-example>\n</app-demo>\n"
        },
        {
            "name": "DataTableExampleAComponent",
            "id": "component-DataTableExampleAComponent-1cde65b98cd3016ddd62d840346aa06b1862bf007c3d0f8dd7b0650841586f5bdd7e220d2563f8314202fcb98c41ad0ecddb52df860e301894ee0fc1cd731358",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-a/data-table-example-a.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-example-a",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card class=\"mat-elevation-z4\">\n    <hh-data-table [config]=\"config\"></hh-data-table>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n        columns: [{ property: 'id', isSortable: true }, { property: 'token', isSortable: true }],\n        data: of(DUMMY_TABLE_DATA.tokens),\n        rowActions: [{ id: 'edit', actionText: 'Edit', onClick: this.onEdit.bind(this) }]\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableConfig<SystemToken>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataTableConfig } from 'projects/hammerhead-ui/src/public-api';\nimport { of } from 'rxjs';\nimport { SystemToken } from '../../data-table.dummy-data';\n\n@Component({\n    selector: 'app-data-table-example-a',\n    template: `\n        <mat-card class=\"mat-elevation-z4\">\n            <hh-data-table [config]=\"config\"></hh-data-table>\n        </mat-card>\n    `\n})\nexport class DataTableExampleAComponent {\n    public readonly config: DataTableConfig<SystemToken> = {\n        columns: [{ property: 'id', isSortable: true }, { property: 'token', isSortable: true }],\n        data: of(DUMMY_TABLE_DATA.tokens),\n        rowActions: [{ id: 'edit', actionText: 'Edit', onClick: this.onEdit.bind(this) }]\n    };\n\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onEdit(token: SystemToken): void {\n        this.snackBar.open(`You want to edit token ${token.id}.`, undefined, { duration: 3000 });\n    }\n}\n\nconst DUMMY_TABLE_DATA: { tokens: SystemToken[] } = {\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DataTableExampleBComponent",
            "id": "component-DataTableExampleBComponent-6a047a1dd0f20a7a16687f6da1d725492b25f7c900df922c0a7489dd8eb845c90c0ac4c01d3bafc803f072ae99279b2f79e5d77660dfd1ee74b5f6d61eda99d0",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-b/data-table-example-b.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-example-b",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card class=\"mat-elevation-z4\">\n    <div fxLayoutAlign=\"center center\" [style.padding.px]=\"12\">\n        <button mat-flat-button color=\"primary\" (click)=\"onRefresh()\">\n            <div fxLayoutAlign=\"center center\" fxLayoutGap=\"6px\">\n                <mat-icon>refresh</mat-icon>\n                <span>Refresh</span>\n            </div>\n        </button>\n    </div>\n    <hh-data-table *ngIf=\"!isRefreshing\" [config]=\"config\"></hh-data-table\n></mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n        columns: [{ property: 'id' }, { property: 'token' }],\n        data: this.DATA.pipe(debounceTime(2000)),\n        rowActions: [{ id: 'edit', actionText: 'Edit', onClick: this.onEdit.bind(this) }]\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableConfig<SystemToken>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "DATA",
                    "defaultValue": "new BehaviorSubject<SystemToken[]>(DUMMY_TABLE_DATA.tokens)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "isRefreshing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRefresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataTableConfig } from 'projects/hammerhead-ui/src/public-api';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SystemToken } from '../../data-table.dummy-data';\n\n@Component({\n    selector: 'app-data-table-example-b',\n    template: `\n        <mat-card class=\"mat-elevation-z4\">\n            <div fxLayoutAlign=\"center center\" [style.padding.px]=\"12\">\n                <button mat-flat-button color=\"primary\" (click)=\"onRefresh()\">\n                    <div fxLayoutAlign=\"center center\" fxLayoutGap=\"6px\">\n                        <mat-icon>refresh</mat-icon>\n                        <span>Refresh</span>\n                    </div>\n                </button>\n            </div>\n            <hh-data-table *ngIf=\"!isRefreshing\" [config]=\"config\"></hh-data-table\n        ></mat-card>\n    `\n})\nexport class DataTableExampleBComponent {\n    private readonly DATA = new BehaviorSubject<SystemToken[]>(DUMMY_TABLE_DATA.tokens);\n\n    public readonly config: DataTableConfig<SystemToken> = {\n        columns: [{ property: 'id' }, { property: 'token' }],\n        data: this.DATA.pipe(debounceTime(2000)),\n        rowActions: [{ id: 'edit', actionText: 'Edit', onClick: this.onEdit.bind(this) }]\n    };\n\n    public isRefreshing = false;\n\n    constructor(private snackBar: MatSnackBar) {\n        setTimeout(() => this.DATA.next([...DUMMY_TABLE_DATA.tokens, { id: 'new-token-6', token: '<token>' }]), 6000);\n    }\n\n    public onEdit(token: SystemToken): void {\n        this.snackBar.open(`You want to edit token ${token.id}.`, undefined, { duration: 3000 });\n    }\n\n    public onRefresh(): void {\n        this.isRefreshing = true;\n        setTimeout(() => (this.isRefreshing = false), 0);\n    }\n}\n\nconst DUMMY_TABLE_DATA: { tokens: SystemToken[] } = {\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DataTableExampleCComponent",
            "id": "component-DataTableExampleCComponent-6cd5a3b42f182728143bb6b5f47fbfc5900eedc0df7963a0643ebdb1a13c44faa7eea777af99d8509f6ae79a85d54c0d4a416ee559b88e98312c6f1cc6bb2c72",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-c/data-table-example-c.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-example-c",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card class=\"mat-elevation-z4\">\n    <hh-data-table [config]=\"config\"></hh-data-table>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n        columns: [{ property: 'id', width: '112px' }, { property: 'token' }],\n        data: of(DUMMY_TABLE_DATA.tokens),\n        rowActions: [\n            { id: 'edit', actionText: 'Edit', onClick: this.onEdit.bind(this) },\n            { id: 'delete', actionText: 'Delete', actionColor: 'warn', onClick: this.onDelete.bind(this) }\n        ],\n        rowActionsWidth: '224px'\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableConfig<SystemToken>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onDelete",
                    "args": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataTableConfig } from 'projects/hammerhead-ui/src/public-api';\nimport { of } from 'rxjs';\nimport { SystemToken } from '../../data-table.dummy-data';\n\n@Component({\n    selector: 'app-data-table-example-c',\n    template: `\n        <mat-card class=\"mat-elevation-z4\">\n            <hh-data-table [config]=\"config\"></hh-data-table>\n        </mat-card>\n    `\n})\nexport class DataTableExampleCComponent {\n    public readonly config: DataTableConfig<SystemToken> = {\n        columns: [{ property: 'id', width: '112px' }, { property: 'token' }],\n        data: of(DUMMY_TABLE_DATA.tokens),\n        rowActions: [\n            { id: 'edit', actionText: 'Edit', onClick: this.onEdit.bind(this) },\n            { id: 'delete', actionText: 'Delete', actionColor: 'warn', onClick: this.onDelete.bind(this) }\n        ],\n        rowActionsWidth: '224px'\n    };\n\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onEdit(token: SystemToken): void {\n        this.snackBar.open(`You want to edit token ${token.id}.`, undefined, { duration: 3000 });\n    }\n\n    public onDelete(token: SystemToken): void {\n        this.snackBar.open(`Are you sure you want to delete ${token.id}?`, 'DO IT', { duration: 3000 });\n    }\n}\n\nconst DUMMY_TABLE_DATA: { tokens: SystemToken[] } = {\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DataTableExampleDComponent",
            "id": "component-DataTableExampleDComponent-95dc7f2df3c8fce58979ba38073ec396a11846991d975df0ddac88eff6c4b171284c769b23d3b88bb05dd2ab6e1883a391c654a0710f02bc346af702a9184d2f",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-d/data-table-example-d.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-example-d",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card class=\"mat-elevation-z4\">\n    <hh-data-table [config]=\"config\"></hh-data-table>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n        columns: [{ property: 'id', width: '112px' }, { property: 'token' }],\n        data: of(DUMMY_TABLE_DATA.tokens),\n        rowActions: [\n            { id: 'edit', isIcon: true, icon: 'edit', onClick: this.onEdit.bind(this) },\n            {\n                id: 'delete',\n                isIcon: true,\n                icon: 'delete',\n                actionColor: 'warn',\n                /* An arrow function works just as well as <method>.bind(this) */\n                onClick: (token: SystemToken) => {\n                    this.snackBar.open(`Are you sure you want to delete ${token.id}?`, 'DO IT', { duration: 3000 });\n                }\n            }\n        ],\n        rowActionsWidth: '112px'\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableConfig<SystemToken>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataTableConfig } from 'projects/hammerhead-ui/src/public-api';\nimport { of } from 'rxjs';\nimport { SystemToken } from '../../data-table.dummy-data';\n\n@Component({\n    selector: 'app-data-table-example-d',\n    template: `\n        <mat-card class=\"mat-elevation-z4\">\n            <hh-data-table [config]=\"config\"></hh-data-table>\n        </mat-card>\n    `\n})\nexport class DataTableExampleDComponent {\n    public readonly config: DataTableConfig<SystemToken> = {\n        columns: [{ property: 'id', width: '112px' }, { property: 'token' }],\n        data: of(DUMMY_TABLE_DATA.tokens),\n        rowActions: [\n            { id: 'edit', isIcon: true, icon: 'edit', onClick: this.onEdit.bind(this) },\n            {\n                id: 'delete',\n                isIcon: true,\n                icon: 'delete',\n                actionColor: 'warn',\n                /* An arrow function works just as well as <method>.bind(this) */\n                onClick: (token: SystemToken) => {\n                    this.snackBar.open(`Are you sure you want to delete ${token.id}?`, 'DO IT', { duration: 3000 });\n                }\n            }\n        ],\n        rowActionsWidth: '112px'\n    };\n\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onEdit(token: SystemToken): void {\n        this.snackBar.open(`You want to edit token ${token.id}.`, undefined, { duration: 3000 });\n    }\n}\n\nconst DUMMY_TABLE_DATA: { tokens: SystemToken[] } = {\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DataTableExampleEComponent",
            "id": "component-DataTableExampleEComponent-0f65d81fe3d507542dee3c6bddb74e1762e8d7f1215cc6081ef68837274c7a74c853c917b731656e6c6ffae82398f4e6e6189c67e6c2ba01d6d3c2c85968f8c2",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-e/data-table-example-e.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-example-e",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card class=\"mat-elevation-z4\">\n    <hh-data-table [config]=\"config\"></hh-data-table>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n        columns: [{ property: 'id', width: '112px' }, { property: 'token' }],\n        data: of(DUMMY_TABLE_DATA.tokens),\n        rowActions: [\n            { id: 'edit', isIcon: true, icon: 'edit', onClick: this.onEdit.bind(this) },\n            {\n                id: 'delete',\n                isIcon: true,\n                icon: 'delete',\n                actionColor: 'warn',\n                /* An arrow function works just as well as <method>.bind(this) */\n                onClick: (token: SystemToken) => {\n                    this.snackBar.open(`Are you sure you want to delete ${token.id}?`, 'DO IT', { duration: 3000 });\n                }\n            }\n        ],\n        rowActionsWidth: '112px',\n        hasGlobalFilter: true\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableConfig<SystemToken>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "SystemToken",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataTableConfig } from 'projects/hammerhead-ui/src/public-api';\nimport { of } from 'rxjs';\nimport { SystemToken } from '../../data-table.dummy-data';\n\n@Component({\n    selector: 'app-data-table-example-e',\n    template: `\n        <mat-card class=\"mat-elevation-z4\">\n            <hh-data-table [config]=\"config\"></hh-data-table>\n        </mat-card>\n    `\n})\nexport class DataTableExampleEComponent {\n    public readonly config: DataTableConfig<SystemToken> = {\n        columns: [{ property: 'id', width: '112px' }, { property: 'token' }],\n        data: of(DUMMY_TABLE_DATA.tokens),\n        rowActions: [\n            { id: 'edit', isIcon: true, icon: 'edit', onClick: this.onEdit.bind(this) },\n            {\n                id: 'delete',\n                isIcon: true,\n                icon: 'delete',\n                actionColor: 'warn',\n                /* An arrow function works just as well as <method>.bind(this) */\n                onClick: (token: SystemToken) => {\n                    this.snackBar.open(`Are you sure you want to delete ${token.id}?`, 'DO IT', { duration: 3000 });\n                }\n            }\n        ],\n        rowActionsWidth: '112px',\n        hasGlobalFilter: true\n    };\n\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onEdit(token: SystemToken): void {\n        this.snackBar.open(`You want to edit token ${token.id}.`, undefined, { duration: 3000 });\n    }\n}\n\nconst DUMMY_TABLE_DATA: { tokens: SystemToken[] } = {\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DataTableExampleFComponent",
            "id": "component-DataTableExampleFComponent-64e6f59dfc86d35df9f3db2b76d8a47459a698c6c40f2e2b819efd79f354bae8693b28a87d60a862ef90f1be552b3a1eaeb31f0ccc60d63a41c8c0800e6cbd2e",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-f/data-table-example-f.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-example-f",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card class=\"mat-elevation-z4\">\n    <hh-data-table [config]=\"config\" [headerTemplate]=\"headerCellTemplate\" [cellTemplate]=\"dataCellTemplate\">\n        <!-- \"col\" is a DataTableColumnConfig object -->\n        <ng-template #headerCellTemplate let-col>\n            <p class=\"no-margin-bottom\">Custom {{ col?.property | titlecase }} Header</p>\n        </ng-template>\n\n        <!-- \"data\" = { col: DataTableColumnConfig; row: SystemToken } -->\n        <ng-template #dataCellTemplate let-data>\n            {{ (data?.row)[(data?.col?.property)] | uppercase }}\n        </ng-template>\n    </hh-data-table>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n        columns: [{ property: 'id' }, { property: 'token' }],\n        data: of(DUMMY_TABLE_DATA.tokens)\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableConfig<SystemToken>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { DataTableConfig } from 'projects/hammerhead-ui/src/public-api';\nimport { of } from 'rxjs';\nimport { SystemToken } from '../../data-table.dummy-data';\n\n@Component({\n    selector: 'app-data-table-example-f',\n    template: `\n        <mat-card class=\"mat-elevation-z4\">\n            <hh-data-table [config]=\"config\" [headerTemplate]=\"headerCellTemplate\" [cellTemplate]=\"dataCellTemplate\">\n                <!-- \"col\" is a DataTableColumnConfig object -->\n                <ng-template #headerCellTemplate let-col>\n                    <p class=\"no-margin-bottom\">Custom {{ col?.property | titlecase }} Header</p>\n                </ng-template>\n\n                <!-- \"data\" = { col: DataTableColumnConfig; row: SystemToken } -->\n                <ng-template #dataCellTemplate let-data>\n                    {{ (data?.row)[(data?.col?.property)] | uppercase }}\n                </ng-template>\n            </hh-data-table>\n        </mat-card>\n    `\n})\nexport class DataTableExampleFComponent {\n    public readonly config: DataTableConfig<SystemToken> = {\n        columns: [{ property: 'id' }, { property: 'token' }],\n        data: of(DUMMY_TABLE_DATA.tokens)\n    };\n}\n\nconst DUMMY_TABLE_DATA: { tokens: SystemToken[] } = {\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DataTableExampleGComponent",
            "id": "component-DataTableExampleGComponent-a2b664a888a75a051bec9f45c655a9f99c28d6f713a3d8ba65a44e8208aa3a13f4a116ddfac8afb2f30822059dd67d6293e12a3484c08098bf383f33caf9a2d0",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-g/data-table-example-g.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-example-g",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card class=\"mat-elevation-z4\">\n    <hh-data-table [config]=\"config\" [zeroStateTemplate]=\"zeroState\">\n        <ng-template #zeroState>\n            <div fxLayoutAlign=\"center center\">\n                <hh-zero-state\n                    [style.width.px]=\"320\"\n                    message=\"Custom zero state message\"\n                    [hasAction]=\"true\"\n                    (doAction)=\"onZeroStateAction()\"\n                ></hh-zero-state>\n            </div>\n        </ng-template>\n    </hh-data-table>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n        columns: [{ property: 'id' }, { property: 'token' }],\n        data: of([]),\n        hasGlobalFilter: true\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableConfig<SystemToken>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onZeroStateAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataTableConfig } from 'projects/hammerhead-ui/src/public-api';\nimport { of } from 'rxjs';\nimport { SystemToken } from '../../data-table.dummy-data';\n\n@Component({\n    selector: 'app-data-table-example-g',\n    template: `\n        <mat-card class=\"mat-elevation-z4\">\n            <hh-data-table [config]=\"config\" [zeroStateTemplate]=\"zeroState\">\n                <ng-template #zeroState>\n                    <div fxLayoutAlign=\"center center\">\n                        <hh-zero-state\n                            [style.width.px]=\"320\"\n                            message=\"Custom zero state message\"\n                            [hasAction]=\"true\"\n                            (doAction)=\"onZeroStateAction()\"\n                        ></hh-zero-state>\n                    </div>\n                </ng-template>\n            </hh-data-table>\n        </mat-card>\n    `\n})\nexport class DataTableExampleGComponent {\n    public readonly config: DataTableConfig<SystemToken> = {\n        columns: [{ property: 'id' }, { property: 'token' }],\n        data: of([]),\n        hasGlobalFilter: true\n    };\n\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onZeroStateAction(): void {\n        this.snackBar.open(`Where'd your data go?`, undefined, { duration: 3000 });\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DataTableExampleHComponent",
            "id": "component-DataTableExampleHComponent-3efab01edcee8a4d511cc553477b0760f905760884bf54ea8351d25e02d4825581f89b73d97c0969f377d8392c78b8272a36c8231623ea3852b104537ddc3bc1",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-h/data-table-example-h.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-data-table-example-h",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card class=\"mat-elevation-z4\">\n    <hh-data-table #hhTable [config]=\"config\" [detailsTemplate]=\"details\" [zeroStateTemplate]=\"zeroState\">\n        <ng-template #details let-data>\n            <div [style.min-height.px]=\"296\">\n                <h3>Details</h3>\n                <p>{{ data | json }}</p>\n            </div>\n        </ng-template>\n        <ng-template #zeroState>\n            <hh-zero-state\n                message=\"No matches found\"\n                [hasAction]=\"true\"\n                actionText=\"Clear filter\"\n                (doAction)=\"hhTable.clearFilters()\"\n            ></hh-zero-state>\n        </ng-template>\n    </hh-data-table>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n        columns: [\n            { property: 'name', isSortable: true },\n            { property: 'age', isSortable: true, width: '112px' },\n            { property: 'company', isSortable: true },\n            { property: 'email', isSortable: true }\n        ],\n        data: of(DUMMY_TABLE_DATA),\n        rowActions: [{ id: 'edit', actionText: 'Edit', onClick: this.onEdit.bind(this) }],\n        isMultiSelect: true,\n        multiSelectActions: [\n            {\n                id: 'delete',\n                actionText: 'Delete all',\n                onClick: persons => {\n                    this.snackBar.open(persons.map(person => person.name).join(', '), 'DISMISS', { duration: 3000 });\n                },\n                actionColor: 'warn'\n            }\n        ],\n        rowActionsWidth: '112px',\n        trackByFn: (_, person) => person.name,\n        isMasterDetail: true,\n        hasGlobalFilter: true\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataTableConfig",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "person",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "person",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataTableConfig } from 'projects/hammerhead-ui/src/public-api';\nimport { of } from 'rxjs';\n\n@Component({\n    selector: 'app-data-table-example-h',\n    template: `\n        <mat-card class=\"mat-elevation-z4\">\n            <hh-data-table #hhTable [config]=\"config\" [detailsTemplate]=\"details\" [zeroStateTemplate]=\"zeroState\">\n                <ng-template #details let-data>\n                    <div [style.min-height.px]=\"296\">\n                        <h3>Details</h3>\n                        <p>{{ data | json }}</p>\n                    </div>\n                </ng-template>\n                <ng-template #zeroState>\n                    <hh-zero-state\n                        message=\"No matches found\"\n                        [hasAction]=\"true\"\n                        actionText=\"Clear filter\"\n                        (doAction)=\"hhTable.clearFilters()\"\n                    ></hh-zero-state>\n                </ng-template>\n            </hh-data-table>\n        </mat-card>\n    `\n})\nexport class DataTableExampleHComponent {\n    public readonly config: DataTableConfig = {\n        columns: [\n            { property: 'name', isSortable: true },\n            { property: 'age', isSortable: true, width: '112px' },\n            { property: 'company', isSortable: true },\n            { property: 'email', isSortable: true }\n        ],\n        data: of(DUMMY_TABLE_DATA),\n        rowActions: [{ id: 'edit', actionText: 'Edit', onClick: this.onEdit.bind(this) }],\n        isMultiSelect: true,\n        multiSelectActions: [\n            {\n                id: 'delete',\n                actionText: 'Delete all',\n                onClick: persons => {\n                    this.snackBar.open(persons.map(person => person.name).join(', '), 'DISMISS', { duration: 3000 });\n                },\n                actionColor: 'warn'\n            }\n        ],\n        rowActionsWidth: '112px',\n        trackByFn: (_, person) => person.name,\n        isMasterDetail: true,\n        hasGlobalFilter: true\n    };\n\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onEdit(person: any): void {\n        this.snackBar.open(`You want to edit ${person.name}.`, undefined, { duration: 3000 });\n    }\n}\n\nconst DUMMY_TABLE_DATA = [\n    {\n        age: 23,\n        name: 'Shields Cameron',\n        gender: 'male',\n        company: 'EXIAND',\n        email: 'shieldscameron@exiand.com',\n        phone: '+1 (804) 400-2621'\n    },\n    {\n        age: 39,\n        name: 'Johns Conley',\n        gender: 'male',\n        company: 'ISONUS',\n        email: 'johnsconley@isonus.com',\n        phone: '+1 (891) 557-3906'\n    },\n    {\n        age: 27,\n        name: 'Ayers Reeves',\n        gender: 'male',\n        company: 'CUIZINE',\n        email: 'ayersreeves@cuizine.com',\n        phone: '+1 (943) 483-2547'\n    },\n    {\n        age: 23,\n        name: 'Wynn Briggs',\n        gender: 'male',\n        company: 'MIRACULA',\n        email: 'wynnbriggs@miracula.com',\n        phone: '+1 (980) 556-3858'\n    },\n    {\n        age: 25,\n        name: 'Leon Mayo',\n        gender: 'male',\n        company: 'ENERVATE',\n        email: 'leonmayo@enervate.com',\n        phone: '+1 (963) 569-2753'\n    }\n];\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DemoComponent",
            "id": "component-DemoComponent-4721609db4d320c9401eeb8831557c157429ff41b5c03a754c601c14fe6b2a9a404a74e46e238242539fa5ee8e394ec400c85a2dcc62446251b56cf0ef038c18",
            "file": "projects/hammerhead-ui-app/src/app/components/shared/demo/demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-demo",
            "styleUrls": [
                "./demo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "interfaceUrls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "templateSourceUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tsSourceUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "interfaces",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "templateSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tsSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "URL_REPO_ROOT",
                    "defaultValue": "'https://raw.githubusercontent.com/iXsystems/hammerhead-ui/master/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        124,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onTabSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-demo',\n    templateUrl: './demo.component.html',\n    styleUrls: ['./demo.component.scss']\n})\nexport class DemoComponent {\n    public static readonly URL_REPO_ROOT = 'https://raw.githubusercontent.com/iXsystems/hammerhead-ui/master/';\n\n    @Input() public title: string;\n    @Input() public description: string;\n\n    private tsSource: string;\n    public get tsSourceUrl(): string {\n        return this.tsSource;\n    }\n    @Input() public set tsSourceUrl(url: string) {\n        this.tsSource = DemoComponent.URL_REPO_ROOT + url;\n    }\n\n    private templateSource: string;\n    public get templateSourceUrl(): string {\n        return this.templateSource;\n    }\n    @Input() public set templateSourceUrl(url: string) {\n        this.templateSource = DemoComponent.URL_REPO_ROOT + url;\n    }\n\n    private interfaces: string[];\n    public get interfaceUrls(): string[] {\n        return this.interfaces;\n    }\n    @Input() public set interfaceUrls(urls: string[]) {\n        this.interfaces = urls.map(url => DemoComponent.URL_REPO_ROOT + url);\n    }\n\n    public onTabSelection(): void {\n        window.dispatchEvent(new Event('resize'));\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    box-sizing: border-box;\n    display: block;\n    padding-top: 72px;\n    position: relative;\n\n    .demo-header {\n        box-sizing: border-box;\n        color: white;\n        height: 72px;\n        left: -24px;\n        padding: 24px;\n        position: absolute;\n        top: -24px;\n        width: calc(100% + 48px);\n\n        p {\n            font-size: 20px;\n            line-height: 24px;\n        }\n    }\n\n    ::ng-deep {\n        app-demo-example:first-of-type {\n            margin: 32px 0 48px;\n        }\n\n        app-demo-example {\n            margin-bottom: 48px;\n        }\n\n        .mat-tab-body {\n            padding: 8px 16px;\n        }\n    }\n}\n",
                    "styleUrl": "./demo.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "tsSourceUrl": {
                    "name": "tsSourceUrl",
                    "setSignature": {
                        "name": "tsSourceUrl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "url",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "url",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "tsSourceUrl",
                        "type": "string",
                        "returnType": "string",
                        "line": 15
                    }
                },
                "templateSourceUrl": {
                    "name": "templateSourceUrl",
                    "setSignature": {
                        "name": "templateSourceUrl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "url",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "url",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "templateSourceUrl",
                        "type": "string",
                        "returnType": "string",
                        "line": 23
                    }
                },
                "interfaceUrls": {
                    "name": "interfaceUrls",
                    "setSignature": {
                        "name": "interfaceUrls",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "urls",
                                "type": "string[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 34,
                        "jsdoctags": [
                            {
                                "name": "urls",
                                "type": "string[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "interfaceUrls",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 31
                    }
                }
            },
            "templateData": "<div class=\"bg-primary demo-header\">\n    <p class=\"no-margin\">{{ title }}</p>\n</div>\n\n<p class=\"no-margin-top margin-bottom-heavy\">{{ description }}</p>\n\n<mat-tab-group (selectedTabChange)=\"onTabSelection()\">\n    <mat-tab>\n        <ng-template mat-tab-label>\n            <div\n                fxLayoutAlign=\"center center\"\n                fxLayoutGap=\"6px\"\n            >\n                <mat-icon>line_style</mat-icon>\n                <p class=\"no-margin-top no-margin-bottom\">Examples</p>\n            </div>\n        </ng-template>\n        <ng-content></ng-content>\n    </mat-tab>\n    <mat-tab>\n        <ng-template mat-tab-label>\n            <div\n                fxLayoutAlign=\"center center\"\n                fxLayoutGap=\"6px\"\n            >\n                <mat-icon>code</mat-icon>\n                <p class=\"no-margin-top no-margin-bottom\">Source</p>\n            </div>\n        </ng-template>\n        <div\n            fxLayout.lt-lg=\"column\"\n            fxLayoutAlign=\"start start\"\n            fxLayoutGap=\"24px\"\n            fxLayoutGap.lt-lg=\"12px\"\n        >\n            <markdown\n                [fxFlex]=\"templateSourceUrl ? 'calc(50% - 12px)' : '100%'\"\n                fxFlex.lt-lg=\"100%\"\n                [src]=\"tsSourceUrl\"\n            ></markdown>\n            <markdown\n                fxFlex=\"calc(50% - 12px)\"\n                fxFlex.lt-lg=\"100%\"\n                [src]=\"templateSourceUrl\"\n            ></markdown>\n        </div>\n    </mat-tab>\n    <mat-tab *ngIf=\"interfaceUrls\">\n        <ng-template mat-tab-label>\n            <div\n                fxLayoutAlign=\"center center\"\n                fxLayoutGap=\"6px\"\n            >\n                <mat-icon>public</mat-icon>\n                <p class=\"no-margin-top no-margin-bottom\">Interfaces</p>\n            </div>\n        </ng-template>\n        <div\n            fxLayout.lt-lg=\"column\"\n            fxLayoutAlign=\"start start\"\n            fxLayoutGap=\"24px\"\n            fxLayoutGap.lt-lg=\"12px\"\n        >\n            <markdown\n                *ngFor=\"let interface of interfaceUrls\"\n                fxFlex=\"calc(50% - 12px)\"\n                fxFlex.lt-lg=\"100%\"\n                [src]=\"interface\"\n            ></markdown>\n        </div>\n    </mat-tab>\n</mat-tab-group>\n"
        },
        {
            "name": "DemoExampleComponent",
            "id": "component-DemoExampleComponent-55d174092cad5a63988d308937cb2b9dea63739418f5e3102cd141b6fa7a92cdfc8b86dff26fe0e9274b03f44e17d0d154f8326459e203a7c1d3ba50dc499d6c",
            "file": "projects/hammerhead-ui-app/src/app/components/shared/demo-example/demo-example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-demo-example",
            "styleUrls": [
                "./demo-example.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./demo-example.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "templateSourceUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tsSourceUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "templateSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tsSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { DemoComponent } from '../demo/demo.component';\n\n@Component({\n    selector: 'app-demo-example',\n    templateUrl: './demo-example.component.html',\n    styleUrls: ['./demo-example.component.scss']\n})\nexport class DemoExampleComponent {\n    @Input() public description: string;\n\n    private tsSource: string;\n    public get tsSourceUrl(): string {\n        return this.tsSource;\n    }\n    @Input() public set tsSourceUrl(url: string) {\n        this.tsSource = DemoComponent.URL_REPO_ROOT + url;\n    }\n\n    private templateSource: string;\n    public get templateSourceUrl(): string {\n        return this.templateSource;\n    }\n    @Input() public set templateSourceUrl(url: string) {\n        this.templateSource = DemoComponent.URL_REPO_ROOT + url;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n\n    ::ng-deep {\n        mat-card-title {\n            p {\n                font-size: 16px;\n            }\n        }\n    }\n}",
                    "styleUrl": "./demo-example.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "tsSourceUrl": {
                    "name": "tsSourceUrl",
                    "setSignature": {
                        "name": "tsSourceUrl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "url",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "url",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "tsSourceUrl",
                        "type": "string",
                        "returnType": "string",
                        "line": 13
                    }
                },
                "templateSourceUrl": {
                    "name": "templateSourceUrl",
                    "setSignature": {
                        "name": "templateSourceUrl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "url",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 24,
                        "jsdoctags": [
                            {
                                "name": "url",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "templateSourceUrl",
                        "type": "string",
                        "returnType": "string",
                        "line": 21
                    }
                }
            },
            "templateData": "<mat-card class=\"bg-contrast-300\">\n    <p [style.margin-bottom.px]=\"24\">{{ description }}</p>\n\n    <mat-tab-group>\n        <mat-tab label=\"Example\">\n            <ng-content></ng-content>\n        </mat-tab>\n\n        <mat-tab label=\"Source\">\n            <div\n                fxLayout.lt-lg=\"column\"\n                fxLayoutAlign=\"start start\"\n                fxLayoutGap=\"24px\"\n                fxLayoutGap.lt-lg=\"12px\"\n            >\n                <markdown\n                    [fxFlex]=\"templateSourceUrl ? 'calc(50% - 12px)' : '100%'\"\n                    fxFlex.lt-lg=\"100%\"\n                    [src]=\"tsSourceUrl\"\n                ></markdown>\n                <markdown\n                    fxFlex=\"calc(50% - 12px)\"\n                    fxFlex.lt-lg=\"100%\"\n                    [src]=\"templateSourceUrl\"\n                ></markdown>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n</mat-card>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeViewComponent",
            "id": "component-HomeViewComponent-ebb7ccf4a96e6abcec7e55b634caf6f61e5146253f6d7eedfd0fded96e65e40a4f1dde54f82c3eb5e6e0a688dc9ec6bc22fccfb51ec01fe791f1b185776b3391",
            "file": "projects/hammerhead-ui-app/src/app/views/home/home-view/home-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-view",
            "styleUrls": [
                "./home-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "readmePath",
                    "defaultValue": "'assets/README.md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-home-view',\n    templateUrl: './home-view.component.html',\n    styleUrls: ['./home-view.component.scss']\n})\nexport class HomeViewComponent {\n  public readonly readmePath = 'assets/README.md';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n    margin: 0 auto;\n    max-width: 960px;\n}\n",
                    "styleUrl": "./home-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- Loads the README directly from master source on Github -->\n<!-- <markdown src=\"https://raw.githubusercontent.com/iXsystems/hammerhead-ui/master/README.md\"></markdown> -->\n\n<!-- Load the local README that ships with the application -->\n<markdown [src]=\"readmePath\"></markdown>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ProximityDialogAComponent",
            "id": "component-ProximityDialogAComponent-8c1fe017e00d4907c93af0a452dfa1340eb0f2847aa82f9c7a0d823531b8274f926fa6149bae57b39bccc3954d0999fb3eda3298965e3f1ae989a7a1dd6e10d3",
            "file": "projects/hammerhead-ui-app/src/app/views/services/components/proximity-dialog/examples/proximity-dialog-example-a/proximity-dialog-example-a.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-proximity-dialog-a",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card>\n    <p>Are you sure you want to do this?</p>\n\n    <section fxLayoutAlign=\"center center\" fxLayoutGap=\"12px\">\n        <button mat-flat-button color=\"default\" (click)=\"onClose.emit(false)\">\n            Cancel\n        </button>\n        <button mat-flat-button color=\"primary\" (click)=\"onClose.emit(true)\">\n            Do it\n        </button>\n    </section>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataDialog, ProximityDialogService } from 'projects/hammerhead-ui/src/public-api';\n\n@Component({\n    selector: 'app-proximity-dialog-example-a',\n    template: `\n        <section [style.padding.px]=\"16\" fxLayoutAlign=\"center center\">\n            <button mat-flat-button color=\"accent\" (click)=\"onOpenDialog(anchor)\" #anchor>\n                Open my dialog\n            </button>\n        </section>\n    `\n})\nexport class ProximityDialogExampleAComponent {\n    constructor(private proximityDialogService: ProximityDialogService, private snackBar: MatSnackBar) {}\n\n    public onOpenDialog(anchorEl: MatButton): void {\n        this.proximityDialogService\n            .open(ProximityDialogAComponent, anchorEl._elementRef.nativeElement, undefined, {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'top'\n            })\n            .subscribe(result =>\n                this.snackBar.open(result ? 'You were sure!' : 'You were not sure...', undefined, {\n                    duration: 2000\n                })\n            );\n    }\n}\n\n@Component({\n    selector: 'app-proximity-dialog-a',\n    template: `\n        <mat-card>\n            <p>Are you sure you want to do this?</p>\n\n            <section fxLayoutAlign=\"center center\" fxLayoutGap=\"12px\">\n                <button mat-flat-button color=\"default\" (click)=\"onClose.emit(false)\">\n                    Cancel\n                </button>\n                <button mat-flat-button color=\"primary\" (click)=\"onClose.emit(true)\">\n                    Do it\n                </button>\n            </section>\n        </mat-card>\n    `\n})\nexport class ProximityDialogAComponent implements DataDialog<boolean> {\n    public onClose = new EventEmitter<boolean>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "DataDialog"
            ]
        },
        {
            "name": "ProximityDialogDemoComponent",
            "id": "component-ProximityDialogDemoComponent-da50a3549e989a07157f449f94142ac5a610b616a8e57f12c27135162b660dcf772d9c0766a12261dd2747fa5f203d48190c377a7bce2470424cace6ae2c6f8f",
            "file": "projects/hammerhead-ui-app/src/app/views/services/components/proximity-dialog/proximity-dialog-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-proximity-dialog-demo",
            "styleUrls": [
                "./proximity-dialog-demo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./proximity-dialog-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-proximity-dialog-demo',\n    templateUrl: './proximity-dialog-demo.component.html',\n    styleUrls: ['./proximity-dialog-demo.component.scss']\n})\nexport class ProximityDialogDemoComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./proximity-dialog-demo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-demo\n    title=\"Proximity Dialog\"\n    description=\"Opens a modal dialog near the specified HTML anchor element\"\n    tsSourceUrl=\"projects/hammerhead-ui/src/lib/services/proximity-dialog/proximity-dialog.service.ts\"\n>\n    <app-demo-example\n        class=\"margin-bottom-heavy\"\n        description=\"Open a dialog near its trigger button\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/services/components/proximity-dialog/examples/proximity-dialog-example-a/proximity-dialog-example-a.component.ts\"\n    >\n        <app-proximity-dialog-example-a></app-proximity-dialog-example-a>\n    </app-demo-example>\n</app-demo>\n"
        },
        {
            "name": "ProximityDialogExampleAComponent",
            "id": "component-ProximityDialogExampleAComponent-8c1fe017e00d4907c93af0a452dfa1340eb0f2847aa82f9c7a0d823531b8274f926fa6149bae57b39bccc3954d0999fb3eda3298965e3f1ae989a7a1dd6e10d3",
            "file": "projects/hammerhead-ui-app/src/app/views/services/components/proximity-dialog/examples/proximity-dialog-example-a/proximity-dialog-example-a.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-proximity-dialog-example-a",
            "styleUrls": [],
            "styles": [],
            "template": "<section [style.padding.px]=\"16\" fxLayoutAlign=\"center center\">\n    <button mat-flat-button color=\"accent\" (click)=\"onOpenDialog(anchor)\" #anchor>\n        Open my dialog\n    </button>\n</section>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onOpenDialog",
                    "args": [
                        {
                            "name": "anchorEl",
                            "type": "MatButton",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "anchorEl",
                            "type": "MatButton",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DataDialog, ProximityDialogService } from 'projects/hammerhead-ui/src/public-api';\n\n@Component({\n    selector: 'app-proximity-dialog-example-a',\n    template: `\n        <section [style.padding.px]=\"16\" fxLayoutAlign=\"center center\">\n            <button mat-flat-button color=\"accent\" (click)=\"onOpenDialog(anchor)\" #anchor>\n                Open my dialog\n            </button>\n        </section>\n    `\n})\nexport class ProximityDialogExampleAComponent {\n    constructor(private proximityDialogService: ProximityDialogService, private snackBar: MatSnackBar) {}\n\n    public onOpenDialog(anchorEl: MatButton): void {\n        this.proximityDialogService\n            .open(ProximityDialogAComponent, anchorEl._elementRef.nativeElement, undefined, {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'top'\n            })\n            .subscribe(result =>\n                this.snackBar.open(result ? 'You were sure!' : 'You were not sure...', undefined, {\n                    duration: 2000\n                })\n            );\n    }\n}\n\n@Component({\n    selector: 'app-proximity-dialog-a',\n    template: `\n        <mat-card>\n            <p>Are you sure you want to do this?</p>\n\n            <section fxLayoutAlign=\"center center\" fxLayoutGap=\"12px\">\n                <button mat-flat-button color=\"default\" (click)=\"onClose.emit(false)\">\n                    Cancel\n                </button>\n                <button mat-flat-button color=\"primary\" (click)=\"onClose.emit(true)\">\n                    Do it\n                </button>\n            </section>\n        </mat-card>\n    `\n})\nexport class ProximityDialogAComponent implements DataDialog<boolean> {\n    public onClose = new EventEmitter<boolean>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "proximityDialogService",
                        "type": "ProximityDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "proximityDialogService",
                        "type": "ProximityDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SearchSelectorComponent",
            "id": "component-SearchSelectorComponent-288524d1f2d1a1600eeafe0dcc0ad558ad3a806c49844c9981f3f1eecdf6ed515fd5dcddbc2e29f01005fbf8008fb7605273e3517defb8c4636e60c096051fe1",
            "file": "projects/hammerhead-ui/src/lib/components/search-selector/search-selector.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "hh-search-selector",
            "styleUrls": [
                "./search-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-selector.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "isMulti",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "DisplayValuePair[]",
                    "decorators": []
                },
                {
                    "name": "selectedOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "DisplayValuePair[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selection",
                    "defaultValue": "new EventEmitter<DisplayValuePair>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "filterControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "options$",
                    "defaultValue": "merge(of(''), this.filterControl.valueChanges.pipe(debounceTime(300))).pipe(\n        map(filterString =>\n            this.options.filter(\n                option =>\n                    JSON.stringify(option)\n                        .toLowerCase()\n                        .indexOf(filterString.trim().toLowerCase()) > -1\n            )\n        )\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "isOptionSelected",
                    "args": [
                        {
                            "name": "option",
                            "type": "DisplayValuePair",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "DisplayValuePair",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { merge, of } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { DisplayValuePair } from '../../interfaces';\n\n@Component({\n    selector: 'hh-search-selector',\n    templateUrl: './search-selector.component.html',\n    styleUrls: ['./search-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchSelectorComponent {\n    @Input() public options: DisplayValuePair[] = [];\n    @Input() public selectedOptions: DisplayValuePair[] = [];\n    @Input() public isMulti: boolean = false;\n    @Input() public customTemplate: TemplateRef<any>;\n    @Output() public readonly selection = new EventEmitter<DisplayValuePair>();\n\n    public readonly filterControl = new FormControl('');\n    public options$ = merge(of(''), this.filterControl.valueChanges.pipe(debounceTime(300))).pipe(\n        map(filterString =>\n            this.options.filter(\n                option =>\n                    JSON.stringify(option)\n                        .toLowerCase()\n                        .indexOf(filterString.trim().toLowerCase()) > -1\n            )\n        )\n    );\n\n    public isOptionSelected(option: DisplayValuePair): boolean {\n        return this.selectedOptions.some(opt => JSON.stringify(opt.value) === JSON.stringify(option.value));\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n\n    mat-list {\n        height: 256px;\n        overflow-y: auto;\n    }\n}\n",
                    "styleUrl": "./search-selector.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-form-field [style.width]=\"'100%'\">\n    <input\n        [formControl]=\"filterControl\"\n        matInput\n        type=\"text\"\n    >\n    <mat-hint>Search</mat-hint>\n</mat-form-field>\n\n<mat-list>\n    <mat-list-item\n        *ngFor=\"let option of options$ | async\"\n        (click)=\"selection.emit(option)\"\n        [style.cursor]=\"'pointer'\"\n    >\n        <span\n            fxLayoutAlign=\"start center\"\n            fxLayoutGap=\"12px\"\n        >\n            <mat-checkbox\n                *ngIf=\"isMulti\"\n                [checked]=\"isOptionSelected(option)\"\n            ></mat-checkbox>\n\n            <p\n                *ngIf=\"!customTemplate; else custom;\"\n                [style.margin]=\"'0'\"\n            >\n                {{ option.display }}\n            </p>\n            <ng-template #custom>\n                <ng-container *ngTemplateOutlet=\"customTemplate; context: { $implicit: option };\"></ng-container>\n            </ng-template>\n        </span>\n    </mat-list-item>\n</mat-list>\n"
        },
        {
            "name": "SearchSelectorDemoComponent",
            "id": "component-SearchSelectorDemoComponent-790b6e0576de3843b88dc2d9698fb0b2d4091aa25da687de2832700f644866dbee3892000dc2a142c24bcff2afecba0ac6062c195408bec4c8b2ec355cc74f67",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/search-selector-demo/search-selector-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-selector-demo",
            "styleUrls": [
                "./search-selector-demo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-selector-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-search-selector-demo',\n    templateUrl: './search-selector-demo.component.html',\n    styleUrls: ['./search-selector-demo.component.scss']\n})\nexport class SearchSelectorDemoComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search-selector-demo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-demo\n    title=\"Search Selector\"\n    description=\"A searchable select menu\"\n    tsSourceUrl=\"projects/hammerhead-ui/src/lib/components/search-selector/search-selector.component.ts\"\n    templateSourceUrl=\"projects/hammerhead-ui/src/lib/components/search-selector/search-selector.component.html\"\n>\n    <app-demo-example\n        class=\"margin-bottom-heavy\"\n        description=\"Simple trigger, single select mode\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/search-selector-demo/examples/search-selector-example-a/search-selector-example-a.component.ts\"\n    >\n        <app-search-selector-example-a></app-search-selector-example-a>\n    </app-demo-example>\n\n    <app-demo-example\n        class=\"margin-bottom-heavy\"\n        description=\"Multi-select mode and custom list-item template\"\n        tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/search-selector-demo/examples/search-selector-example-b/search-selector-example-b.component.ts\"\n    >\n        <app-search-selector-example-b></app-search-selector-example-b>\n    </app-demo-example>\n</app-demo>\n"
        },
        {
            "name": "SearchSelectorDialogComponent",
            "id": "component-SearchSelectorDialogComponent-afb5d3d84b9fab661ca733429e75bb1ff8287ccc896c56834c68f4cb53279f74448a2bef62753a6a817519723365de0ef09524001d90a4626fa185af6ed87923",
            "file": "projects/hammerhead-ui/src/lib/directives/search-selector.directive.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "hh-source-selector-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-card>\n    <hh-search-selector\n        [options]=\"data.options\"\n        [isMulti]=\"data.isMulti\"\n        [selectedOptions]=\"selections\"\n        [customTemplate]=\"data.template\"\n        (selection)=\"onSelection($event)\"\n    ></hh-search-selector>\n\n    <mat-divider *ngIf=\"data.isMulti\"></mat-divider>\n\n    <section *ngIf=\"data.isMulti\" fxLayoutAlign=\"end center\" fxLayoutGap=\"12px\" [style.margin-top.px]=\"16\">\n        <button mat-flat-button color=\"default\" (click)=\"onClose.emit(null)\">Cancel</button>\n        <button mat-flat-button color=\"primary\" (click)=\"onClose.emit(selections)\">Select</button>\n    </section>\n</mat-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "{\n        options: [],\n        title: 'Select',\n        selectedOptions: [],\n        isMulti: false\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter<any | any[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selections",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DisplayValuePair[]",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onSelection",
                    "args": [
                        {
                            "name": "selection",
                            "type": "DisplayValuePair",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "selection",
                            "type": "DisplayValuePair",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ConnectedPosition } from '@angular/cdk/overlay';\nimport {\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef\n} from '@angular/core';\nimport { DataDialog, DisplayValuePair } from '../interfaces';\nimport { ProximityDialogService } from '../services/proximity-dialog/proximity-dialog.service';\n\n@Directive({ selector: '[hhSearchSelector]', providers: [ProximityDialogService] })\nexport class SearchSelectorDirective {\n    @Input('hhSearchSelector') public options: DisplayValuePair[] = [];\n    @Input() public hhSearchSelectorIsMulti = false;\n    @Input() public hhSearchSelectorSelected: DisplayValuePair[] = [];\n    @Input() public hhSearchSelectorTemplate: TemplateRef<any>;\n    @Input() public hhSearchSelectorPosition: ConnectedPosition = {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    };\n\n    @Output() public readonly hhSearchSelection = new EventEmitter<any | any[]>();\n\n    constructor(private proximityDialogService: ProximityDialogService, private el: ElementRef) {}\n\n    @HostListener('click')\n    public click(): void {\n        this.proximityDialogService\n            .open(\n                SearchSelectorDialogComponent,\n                this.el.nativeElement,\n                {\n                    title: 'Selection search',\n                    options: this.options,\n                    selectedOptions: this.hhSearchSelectorSelected,\n                    isMulti: this.hhSearchSelectorIsMulti,\n                    template: this.hhSearchSelectorTemplate\n                },\n                this.hhSearchSelectorPosition\n            )\n            .subscribe(selection => this.hhSearchSelection.emit(selection));\n    }\n}\n\n@Component({\n    selector: 'hh-source-selector-dialog',\n    template: `\n        <mat-card>\n            <hh-search-selector\n                [options]=\"data.options\"\n                [isMulti]=\"data.isMulti\"\n                [selectedOptions]=\"selections\"\n                [customTemplate]=\"data.template\"\n                (selection)=\"onSelection($event)\"\n            ></hh-search-selector>\n\n            <mat-divider *ngIf=\"data.isMulti\"></mat-divider>\n\n            <section *ngIf=\"data.isMulti\" fxLayoutAlign=\"end center\" fxLayoutGap=\"12px\" [style.margin-top.px]=\"16\">\n                <button mat-flat-button color=\"default\" (click)=\"onClose.emit(null)\">Cancel</button>\n                <button mat-flat-button color=\"primary\" (click)=\"onClose.emit(selections)\">Select</button>\n            </section>\n        </mat-card>\n    `\n})\nexport class SearchSelectorDialogComponent implements DataDialog<DisplayValuePair[]>, OnInit {\n    public data: {\n        options: DisplayValuePair[];\n        title: string;\n        isMulti: boolean;\n        selectedOptions: DisplayValuePair[];\n        template?: TemplateRef<any>;\n    } = {\n        options: [],\n        title: 'Select',\n        selectedOptions: [],\n        isMulti: false\n    };\n    public onClose = new EventEmitter<any | any[]>();\n\n    public selections: DisplayValuePair[] = [];\n\n    public ngOnInit(): void {\n        this.selections = [...this.data.selectedOptions];\n    }\n\n    public onSelection(selection: DisplayValuePair): void {\n        if (this.selections.some(sel => JSON.stringify(sel.value) === JSON.stringify(selection.value))) {\n            this.selections = this.selections.filter(\n                sel => JSON.stringify(sel.value) !== JSON.stringify(selection.value)\n            );\n        } else {\n            this.selections.unshift(selection);\n        }\n\n        if (!this.data.isMulti) {\n            this.onClose.emit(selection);\n        }\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "DataDialog",
                "OnInit"
            ]
        },
        {
            "name": "SearchSelectorExampleAComponent",
            "id": "component-SearchSelectorExampleAComponent-84a20a236956fc3212b49a84fec1dde280144f421f53b028614915fb9514a30eb7f412a9a36acf92d5016a6f5ea5616f3c0720128e4a9e8a8752b68dd68b2bd5",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/search-selector-demo/examples/search-selector-example-a/search-selector-example-a.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-selector-example-a",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n    mat-flat-button\n    color=\"accent\"\n    [hhSearchSelector]=\"options\"\n    (hhSearchSelection)=\"onSelection($event)\"\n    [style.margin.px]=\"24\"\n>\n    Select\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "[\n        {\n            display: 'Aaron Ervin',\n            value: { name: 'Aaron Ervin' }\n        },\n        {\n            display: 'Ollie Poodle',\n            value: { name: 'Ollie Poodle' }\n        },\n        {\n            display: 'Rachel Shea',\n            value: { name: 'Rachel Shea' }\n        }\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DisplayValuePair[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onSelection",
                    "args": [
                        {
                            "name": "option",
                            "type": "DisplayValuePair",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "DisplayValuePair",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DisplayValuePair } from 'projects/hammerhead-ui/src/public-api';\n\n@Component({\n    selector: 'app-search-selector-example-a',\n    template: `\n        <button\n            mat-flat-button\n            color=\"accent\"\n            [hhSearchSelector]=\"options\"\n            (hhSearchSelection)=\"onSelection($event)\"\n            [style.margin.px]=\"24\"\n        >\n            Select\n        </button>\n    `\n})\nexport class SearchSelectorExampleAComponent {\n    public readonly options: DisplayValuePair[] = [\n        {\n            display: 'Aaron Ervin',\n            value: { name: 'Aaron Ervin' }\n        },\n        {\n            display: 'Ollie Poodle',\n            value: { name: 'Ollie Poodle' }\n        },\n        {\n            display: 'Rachel Shea',\n            value: { name: 'Rachel Shea' }\n        }\n    ];\n\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onSelection(option: DisplayValuePair): void {\n        this.snackBar.open(option ? option.display : 'No selection', undefined, { duration: 3000 });\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SearchSelectorExampleBComponent",
            "id": "component-SearchSelectorExampleBComponent-e143e65fb0636059ae10280d165f72e64fe598df7725812d00c64f8a4e1960d41adebb18078eedf7248fb5c5a8765c143a85cb7e63e77ec75c0e2d870b7861ab",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/search-selector-demo/examples/search-selector-example-b/search-selector-example-b.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-selector-example-b",
            "styleUrls": [],
            "styles": [],
            "template": "<p>Selections: {{ selected | json }}</p>\n<button\n    mat-flat-button\n    color=\"accent\"\n    [hhSearchSelector]=\"options\"\n    [hhSearchSelectorIsMulti]=\"true\"\n    [hhSearchSelectorSelected]=\"selected\"\n    [hhSearchSelectorTemplate]=\"customTemplate\"\n    (hhSearchSelection)=\"onSelection($event)\"\n    [style.margin.px]=\"24\"\n>\n    Select one or more\n</button>\n\n<ng-template #customTemplate let-data>\n    <p>{{ data.display | uppercase }}</p>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "[\n        {\n            display: 'Aaron Ervin Really Long Name Sr.',\n            value: { name: 'Aaron Ervin Really Long Name Sr.' }\n        },\n        {\n            display: 'Ollie Poodle',\n            value: { name: 'Ollie Poodle' }\n        },\n        {\n            display: 'Rachel Shea',\n            value: { name: 'Rachel Shea' }\n        }\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DisplayValuePair[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "selected",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DisplayValuePair[]",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onSelection",
                    "args": [
                        {
                            "name": "options",
                            "type": "DisplayValuePair[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "DisplayValuePair[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DisplayValuePair } from 'projects/hammerhead-ui/src/public-api';\n\n@Component({\n    selector: 'app-search-selector-example-b',\n    template: `\n        <p>Selections: {{ selected | json }}</p>\n        <button\n            mat-flat-button\n            color=\"accent\"\n            [hhSearchSelector]=\"options\"\n            [hhSearchSelectorIsMulti]=\"true\"\n            [hhSearchSelectorSelected]=\"selected\"\n            [hhSearchSelectorTemplate]=\"customTemplate\"\n            (hhSearchSelection)=\"onSelection($event)\"\n            [style.margin.px]=\"24\"\n        >\n            Select one or more\n        </button>\n\n        <ng-template #customTemplate let-data>\n            <p>{{ data.display | uppercase }}</p>\n        </ng-template>\n    `\n})\nexport class SearchSelectorExampleBComponent {\n    public readonly options: DisplayValuePair[] = [\n        {\n            display: 'Aaron Ervin Really Long Name Sr.',\n            value: { name: 'Aaron Ervin Really Long Name Sr.' }\n        },\n        {\n            display: 'Ollie Poodle',\n            value: { name: 'Ollie Poodle' }\n        },\n        {\n            display: 'Rachel Shea',\n            value: { name: 'Rachel Shea' }\n        }\n    ];\n\n    public selected: DisplayValuePair[] = [];\n\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onSelection(options: DisplayValuePair[]): void {\n        this.selected = options || this.selected;\n        this.snackBar.open(\n            this.selected && this.selected.length > 0\n                ? this.selected.map(option => option.display).join(', ')\n                : 'No selections',\n            undefined,\n            { duration: 3000 }\n        );\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ServicesOverviewComponent",
            "id": "component-ServicesOverviewComponent-63834eb97d67df9d867ae60b7db79c0cf16e2bf493ed4d7addd93ff6b09ba0555b3a4f6a3d63e22bccde38867a3e13966c84812a441bdfdd218744a4498781a6",
            "file": "projects/hammerhead-ui-app/src/app/views/services/components/services-overview/services-overview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-services-overview",
            "styleUrls": [
                "./services-overview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./services-overview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-services-overview',\n    templateUrl: './services-overview.component.html',\n    styleUrls: ['./services-overview.component.scss']\n})\nexport class ServicesOverviewComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./services-overview.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>services-overview works!</p>\n"
        },
        {
            "name": "SideNavComponent",
            "id": "component-SideNavComponent-74678e5132b46c1472a89340b58ead6bc6d75544b7186a76dc075fa0cee94021f14a01a67955dd2e2c2878011b30e01c436cee54d341a6750f4df2dbd75c614d",
            "file": "projects/hammerhead-ui-app/src/app/components/side-nav/side-nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-nav",
            "styleUrls": [
                "./side-nav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-nav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "componentDemos",
                    "defaultValue": "COMPONENT_DEMOS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "serviceDemos",
                    "defaultValue": "SERVICE_DEMOS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateToComponentDemo",
                    "args": [
                        {
                            "name": "component",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { COMPONENT_DEMOS } from '../../views/components/components-view.module';\nimport { SERVICE_DEMOS } from '../../views/services/services-view.module';\n\n@Component({\n    selector: 'app-side-nav',\n    templateUrl: './side-nav.component.html',\n    styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent {\n    public componentDemos = COMPONENT_DEMOS;\n    public serviceDemos = SERVICE_DEMOS;\n\n    constructor(private router: Router) {}\n\n    navigateToComponentDemo(component: string): void {\n        this.router.navigateByUrl(`components/${component}`);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n    height: 100%;\n    overflow-y: auto;\n}",
                    "styleUrl": "./side-nav.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-accordion>\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>Components</mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <mat-nav-list>\n            <a\n                mat-list-item\n                [routerLink]=\"'components/' + demo.id\"\n                *ngFor=\"let demo of componentDemos\"\n            >\n                {{ demo.name }}\n            </a>\n        </mat-nav-list>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>Services</mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <mat-nav-list>\n            <a\n                mat-list-item\n                [routerLink]=\"'services/' + demo.id\"\n                *ngFor=\"let demo of serviceDemos\"\n            >\n                {{ demo.name }}\n            </a>\n        </mat-nav-list>\n    </mat-expansion-panel>\n</mat-accordion>\n"
        },
        {
            "name": "TimelineComponent",
            "id": "component-TimelineComponent-1176c250f1a6f36b39cd903a7a85673ca5a67541a626f30dd8797f11c3ebf56f72efa646b43ddba74ea77e0b238b25c1478bf2467df0c7364d334f9e633366a9",
            "file": "projects/hammerhead-ui/src/lib/components/timeline/timeline.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "hh-timeline",
            "styleUrls": [
                "./timeline.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./timeline.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dates",
                    "defaultValue": "[\n        { date: new Date(), displayFormatter: date => date.toDateString() }\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TimelineDate[]",
                    "decorators": []
                },
                {
                    "name": "initialDate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TimelineDate",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selection",
                    "defaultValue": "new EventEmitter<TimelineDate>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedDateIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "change",
                            "type": "MatSliderChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "MatSliderChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInput",
                    "args": [
                        {
                            "name": "change",
                            "type": "MatSliderChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "MatSliderChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSliderChange } from '@angular/material/slider';\nimport { TimelineDate } from '../../interfaces';\n\n@Component({\n    selector: 'hh-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements OnInit {\n    @Input() public readonly dates: TimelineDate[] = [\n        { date: new Date(), displayFormatter: date => date.toDateString() }\n    ];\n\n    @Input() public initialDate: TimelineDate = null;\n\n    @Output() public selection = new EventEmitter<TimelineDate>();\n\n    public selectedDateIndex: number;\n\n    public get date(): TimelineDate {\n        return this.dates[this.selectedDateIndex];\n    }\n\n    public ngOnInit(): void {\n        this.selectedDateIndex = this.initialDate\n            ? this.dates.findIndex(date => date.date.toUTCString() === this.initialDate.date.toUTCString())\n            : this.dates.length - 1;\n    }\n\n    public onChange(change: MatSliderChange): void {\n        this.selectedDateIndex = change.value;\n        this.selection.emit(this.dates[this.selectedDateIndex]);\n    }\n\n    public onInput(change: MatSliderChange): void {\n        this.selectedDateIndex = change.value;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n    width: 100%;\n\n    mat-slider {\n        display: block;\n        margin: 0 auto;\n        width: calc(100% - 4px);\n    }\n}\n",
                    "styleUrl": "./timeline.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "date": {
                    "name": "date",
                    "getSignature": {
                        "name": "date",
                        "type": "",
                        "returnType": "TimelineDate",
                        "line": 22
                    }
                }
            },
            "templateData": "<p>\n    {{ date?.displayFormatter ? date?.displayFormatter(date?.date, date?.data) : date?.date?.toDateString() }}\n</p>\n\n<mat-slider\n    [value]=\"selectedDateIndex\"\n    [disabled]=\"dates.length === 1\"\n    [thumbLabel]=\"false\"\n    [step]=\"1\"\n    [min]=\"0\"\n    [max]=\"dates.length - 1 || 1\"\n    [tickInterval]=\"1\"\n    (change)=\"onChange($event)\"\n    (input)=\"onInput($event)\"\n></mat-slider>\n"
        },
        {
            "name": "TopNavComponent",
            "id": "component-TopNavComponent-0886909bd671a338635d46fcbcf2717b2c2ba31ea5a94c7bf3fd4dd31f9aaca3575935fb8d30bfd5be72a57dfd45d1a10fc615ec83fe7c0d507c68bce62fd4c8",
            "file": "projects/hammerhead-ui-app/src/app/components/top-nav/top-nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top-nav",
            "styleUrls": [
                "./top-nav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./top-nav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "menuToggle",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-top-nav',\n    templateUrl: './top-nav.component.html',\n    styleUrls: ['./top-nav.component.scss']\n})\nexport class TopNavComponent {\n    @Output() public menuToggle = new EventEmitter<void>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n    height: 56px;\n    position: absolute;\n    width: 100%;\n    z-index: 2;\n\n    ::ng-deep {\n        mat-toolbar {\n            height: 56px;\n        }\n    }\n\n    .github-logo {\n        text-decoration: none;\n\n        img {\n            height: 24px;\n            width: 24px;\n        }\n\n        p {\n            text-decoration: none !important;\n            color: white;\n        }\n    }\n}\n",
                    "styleUrl": "./top-nav.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-toolbar\n    color=\"primary\"\n    fxLayoutAlign=\"space-between center\"\n>\n    <section\n        fxLayoutAlign=\"start center\"\n        fxLayoutGap=\"8px\"\n    >\n        <mat-icon\n            (click)=\"menuToggle.emit()\"\n            class=\"cursor-pointer\"\n        >\n            menu\n        </mat-icon>\n        <h4\n            class=\"no-margin cursor-pointer\"\n            routerLink=\"/\"\n        >\n            Hammerhead UI\n        </h4>\n    </section>\n\n    <section>\n        <a\n            fxLayoutAlign=\"center center\"\n            fxLayoutGap=\"8px\"\n            href=\"https://github.com/iXsystems/hammerhead-ui\"\n            class=\"github-logo\"\n            target=\"_blank\"\n        >\n            <img src=\"assets/github_logo_white.svg\">\n            <p class=\"no-margin\">Github</p>\n        </a>\n    </section>\n</mat-toolbar>\n"
        },
        {
            "name": "ZeroStateComponent",
            "id": "component-ZeroStateComponent-b0ef99833eeaa267f194b9f370aa874a7cf7fee2dd8a2ec607030d036addab5638b87bb15fc700b8417cd16ebf146466683103ad70a9842698f8f15a01c49078",
            "file": "projects/hammerhead-ui/src/lib/components/zero-state/zero-state.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "hh-zero-state",
            "styleUrls": [
                "./zero-state.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./zero-state.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionPosition",
                    "defaultValue": "ZeroStateComponent.DEFAULT_ACTION_POSITION",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ButtonPosition",
                    "decorators": []
                },
                {
                    "name": "actionText",
                    "defaultValue": "ZeroStateComponent.DEFAULT_ACTION_TEXT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hasAction",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "ZeroStateComponent.DEFAULT_MESSAGE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "doAction",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "DEFAULT_ACTION_POSITION",
                    "defaultValue": "'below'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        124,
                        144
                    ]
                },
                {
                    "name": "DEFAULT_ACTION_TEXT",
                    "defaultValue": "'Configure'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        124,
                        144
                    ]
                },
                {
                    "name": "DEFAULT_MESSAGE",
                    "defaultValue": "'No data available'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        124,
                        144
                    ]
                },
                {
                    "name": "flexLayout",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"row\" | \"column\"",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "updateFlexLayout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { ButtonPosition } from '../../interfaces';\n\n@Component({\n    selector: 'hh-zero-state',\n    templateUrl: './zero-state.component.html',\n    styleUrls: ['./zero-state.component.scss']\n})\nexport class ZeroStateComponent implements OnInit, OnChanges {\n    public static readonly DEFAULT_MESSAGE = 'No data available';\n    public static readonly DEFAULT_ACTION_TEXT = 'Configure';\n    public static readonly DEFAULT_ACTION_POSITION = 'below';\n\n    @Input() public message = ZeroStateComponent.DEFAULT_MESSAGE;\n    @Input() public hasAction = false;\n    @Input() public actionText = ZeroStateComponent.DEFAULT_ACTION_TEXT;\n    @Input() public actionPosition: ButtonPosition = ZeroStateComponent.DEFAULT_ACTION_POSITION;\n\n    @Output() public doAction = new EventEmitter<void>();\n\n    public flexLayout: 'row' | 'column' = 'column';\n\n    public ngOnInit(): void {\n        this.updateFlexLayout();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.actionPosition) {\n            this.updateFlexLayout();\n        }\n    }\n\n    private updateFlexLayout(): void {\n        this.flexLayout = this.actionPosition === 'above' || this.actionPosition === 'below' ? 'column' : 'row';\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n    margin: 4px;\n\n    p {\n        margin: 0;\n        text-align: center;\n    }\n}\n",
                    "styleUrl": "./zero-state.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<mat-card\n    [fxLayout]=\"flexLayout\"\n    fxLayoutAlign=\"center center\"\n    fxLayoutGap=\"12px\"\n>\n    <ng-container *ngIf=\"hasAction; else simpleMessage;\">\n        <button\n            *ngIf=\"actionPosition === 'above' || actionPosition === 'before'\"\n            mat-flat-button\n            color=\"primary\"\n            (click)=\"doAction.emit()\"\n        >\n            {{ actionText }}\n        </button>\n        <p>{{ message }}</p>\n        <button\n            *ngIf=\"actionPosition === 'below' || actionPosition === 'after'\"\n            mat-flat-button\n            color=\"primary\"\n            (click)=\"doAction.emit()\"\n        >\n            {{ actionText }}\n        </button>\n    </ng-container>\n\n    <ng-template #simpleMessage>\n        <p>{{ message }}</p>\n    </ng-template>\n</mat-card>\n"
        },
        {
            "name": "ZeroStateDemoComponent",
            "id": "component-ZeroStateDemoComponent-92b831b3e91da378cdbb4bd12ba55fc4de1e4822b8d850b5f043435a125dc3b3a4560bc91245dce5dfc04d491e28a3422e4bf637ebc9a6a1368a419251bceca9",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/zero-state-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-zero-state-demo",
            "styleUrls": [
                "./zero-state-demo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./zero-state-demo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-zero-state-demo',\n    templateUrl: './zero-state-demo.component.html',\n    styleUrls: ['./zero-state-demo.component.scss']\n})\nexport class ZeroStateDemoComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    ::ng-deep {\n        hh-zero-state {\n            margin: 12px;\n        }\n    }\n}\n",
                    "styleUrl": "./zero-state-demo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-demo\n    title=\"Zero State\"\n    description=\"Displays a message and optional action button when no data is available.\"\n    tsSourceUrl=\"projects/hammerhead-ui/src/lib/components/zero-state/zero-state.component.ts\"\n    templateSourceUrl=\"projects/hammerhead-ui/src/lib/components/zero-state/zero-state.component.html\"\n>\n        <app-demo-example\n            class=\"margin-bottom-heavy\"\n            description=\"Simple message, no action button\"\n            tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/examples/zero-state-example-1/zero-state-example-1.component.ts\"\n        >\n            <app-zero-state-example-1></app-zero-state-example-1>\n        </app-demo-example>\n\n        <app-demo-example\n            description=\"Message with action button\"\n            tsSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/examples/zero-state-example-2/zero-state-example-2.component.ts\"\n            templateSourceUrl=\"projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/examples/zero-state-example-2/zero-state-example-2.component.html\"\n        >\n            <app-zero-state-example-2></app-zero-state-example-2>\n        </app-demo-example>\n</app-demo>\n"
        },
        {
            "name": "ZeroStateExample1Component",
            "id": "component-ZeroStateExample1Component-1545f8af869dacc172dac976cc4859d6ed3b608e07ac7bd14632fd5a7b4267d231795c18f04b2af3e2f1af6aa4a69cccca3e923f45078376272201cee13e12f6",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/examples/zero-state-example-1/zero-state-example-1.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-zero-state-example-1",
            "styleUrls": [],
            "styles": [],
            "template": "<hh-zero-state message=\"No data available\" [style.max-width.px]=\"320\"></hh-zero-state>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-zero-state-example-1',\n    template: `\n        <hh-zero-state message=\"No data available\" [style.max-width.px]=\"320\"></hh-zero-state>\n    `\n})\nexport class ZeroStateExample1Component {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ZeroStateExample2Component",
            "id": "component-ZeroStateExample2Component-985f3c166386c82286a8618064313f743fce666c3f4632e79a7351866315954153b36fe5a4912e5bb5b4dae5bbc5f71f40511bcf83ee1bb8ca87d879d26c7dd6",
            "file": "projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/examples/zero-state-example-2/zero-state-example-2.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-zero-state-example-2",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zero-state-example-2.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onAction",
                    "args": [
                        {
                            "name": "buttonPosition",
                            "type": "ButtonPosition",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "buttonPosition",
                            "type": "ButtonPosition",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ButtonPosition } from 'hammerhead-ui';\n\n@Component({\n    selector: 'app-zero-state-example-2',\n    templateUrl: './zero-state-example-2.component.html'\n})\nexport class ZeroStateExample2Component {\n    constructor(private snackBar: MatSnackBar) {}\n\n    public onAction(buttonPosition: ButtonPosition): void {\n        this.snackBar.open(\n            `You clicked the action button of the ${buttonPosition.toUpperCase()} zero-state component.`,\n            undefined,\n            { duration: 2000 }\n        );\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\n    class=\"example\"\n    fxLayout=\"row wrap\"\n    fxLayoutAlign=\"space-between center\"\n    fxLayoutGap=\"24px\"\n>\n    <hh-zero-state\n        message=\"Default action button position is below.\"\n        [hasAction]=\"true\"\n        actionText=\"Confirm\"\n        (doAction)=\"onAction('below')\"\n    ></hh-zero-state>\n    <hh-zero-state\n        message=\"Action button in 'above' position\"\n        [hasAction]=\"true\"\n        actionText=\"Confirm\"\n        actionPosition=\"above\"\n        (doAction)=\"onAction('above')\"\n    ></hh-zero-state>\n    <hh-zero-state\n        message=\"Action button in 'before' position\"\n        [hasAction]=\"true\"\n        actionText=\"Confirm\"\n        actionPosition=\"before\"\n        (doAction)=\"onAction('before')\"\n    ></hh-zero-state>\n    <hh-zero-state\n        message=\"Action button in 'after' position\"\n        [hasAction]=\"true\"\n        actionText=\"Confirm\"\n        actionPosition=\"after\"\n        (doAction)=\"onAction('after')\"\n    ></hh-zero-state>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a8385e64dc905f03745d81e37f3a495413a9826148b9217449ce410095761b0a96a08b5de4547947cd700a3a92e5114dcdf9064d73c0d2b623b65fb8e87d3958",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui-app/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { AppComponent } from './app.component';\nimport { ROUTES } from './app.routes';\nimport { SharedComponentsModule } from './components/shared/shared-components.module';\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\nimport { TopNavComponent } from './components/top-nav/top-nav.component';\nimport { HomeViewComponent } from './views/home/home-view/home-view.component';\n\n@NgModule({\n    declarations: [AppComponent, HomeViewComponent, SideNavComponent, TopNavComponent],\n    imports: [\n        BrowserAnimationsModule,\n        BrowserModule,\n        HttpClientModule,\n        MarkdownModule.forRoot({ loader: HttpClient }),\n        RouterModule.forRoot(ROUTES),\n        SharedComponentsModule.forRoot()\n    ],\n    exports: [RouterModule],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HomeViewComponent"
                        },
                        {
                            "name": "SideNavComponent"
                        },
                        {
                            "name": "TopNavComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsViewModule",
            "id": "module-ComponentsViewModule-56c88d18878c4524c750e82396ee192e4eb8335ad182e493976ee3505c3f4e8fa9f0e6f554318fa895b032f7a240463b690a52c1d36f8291cf8c2f2354e7e475",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui-app/src/app/views/components/components-view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedComponentsModule } from '../../components/shared/shared-components.module';\nimport { ROUTES_COMPONENTS_VIEW } from './components-view.routes';\nimport { ComponentsOverviewComponent } from './components/components-overview/components-overview.component';\nimport { ContextMenuDemoComponent } from './components/context-menu-demo/context-menu-demo.component';\nimport { ContextMenuExampleAComponent } from './components/context-menu-demo/examples/context-menu-example-a/context-menu-example-a.component';\nimport { DataTableDemoComponent } from './components/data-table-demo/data-table-demo.component';\nimport { DataTableExampleAComponent } from './components/data-table-demo/examples/data-table-example-a/data-table-example-a.component';\nimport { DataTableExampleBComponent } from './components/data-table-demo/examples/data-table-example-b/data-table-example-b.component';\nimport { DataTableExampleCComponent } from './components/data-table-demo/examples/data-table-example-c/data-table-example-c.component';\nimport { DataTableExampleDComponent } from './components/data-table-demo/examples/data-table-example-d/data-table-example-d.component';\nimport { DataTableExampleEComponent } from './components/data-table-demo/examples/data-table-example-e/data-table-example-e.component';\nimport { DataTableExampleFComponent } from './components/data-table-demo/examples/data-table-example-f/data-table-example-f.component';\nimport { DataTableExampleGComponent } from './components/data-table-demo/examples/data-table-example-g/data-table-example-g.component';\nimport { DataTableExampleHComponent } from './components/data-table-demo/examples/data-table-example-h/data-table-example-h.component';\nimport { SearchSelectorExampleAComponent } from './components/search-selector-demo/examples/search-selector-example-a/search-selector-example-a.component';\nimport { SearchSelectorExampleBComponent } from './components/search-selector-demo/examples/search-selector-example-b/search-selector-example-b.component';\nimport { SearchSelectorDemoComponent } from './components/search-selector-demo/search-selector-demo.component';\nimport { ZeroStateExample1Component } from './components/zero-state-demo/examples/zero-state-example-1/zero-state-example-1.component';\nimport { ZeroStateExample2Component } from './components/zero-state-demo/examples/zero-state-example-2/zero-state-example-2.component';\nimport { ZeroStateDemoComponent } from './components/zero-state-demo/zero-state-demo.component';\n\nexport const COMPONENT_DEMOS = [\n    {\n        id: 'context-menu',\n        name: 'Context Menu'\n    },\n    {\n        id: 'data-table',\n        name: 'Data Table'\n    },\n    {\n        id: 'search-selector',\n        name: 'Search Selector'\n    },\n    {\n        id: 'zero-state',\n        name: 'Zero State'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(ROUTES_COMPONENTS_VIEW), SharedComponentsModule],\n    declarations: [\n        ComponentsOverviewComponent,\n        ContextMenuDemoComponent,\n        ContextMenuExampleAComponent,\n        DataTableDemoComponent,\n        DataTableExampleAComponent,\n        DataTableExampleBComponent,\n        DataTableExampleCComponent,\n        DataTableExampleDComponent,\n        DataTableExampleEComponent,\n        DataTableExampleFComponent,\n        DataTableExampleGComponent,\n        DataTableExampleHComponent,\n        SearchSelectorDemoComponent,\n        SearchSelectorExampleAComponent,\n        SearchSelectorExampleBComponent,\n        ZeroStateDemoComponent,\n        ZeroStateExample1Component,\n        ZeroStateExample2Component\n    ]\n})\nexport class ComponentsViewModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ComponentsOverviewComponent"
                        },
                        {
                            "name": "ContextMenuDemoComponent"
                        },
                        {
                            "name": "ContextMenuExampleAComponent"
                        },
                        {
                            "name": "DataTableDemoComponent"
                        },
                        {
                            "name": "DataTableExampleAComponent"
                        },
                        {
                            "name": "DataTableExampleBComponent"
                        },
                        {
                            "name": "DataTableExampleCComponent"
                        },
                        {
                            "name": "DataTableExampleDComponent"
                        },
                        {
                            "name": "DataTableExampleEComponent"
                        },
                        {
                            "name": "DataTableExampleFComponent"
                        },
                        {
                            "name": "DataTableExampleGComponent"
                        },
                        {
                            "name": "DataTableExampleHComponent"
                        },
                        {
                            "name": "SearchSelectorDemoComponent"
                        },
                        {
                            "name": "SearchSelectorExampleAComponent"
                        },
                        {
                            "name": "SearchSelectorExampleBComponent"
                        },
                        {
                            "name": "ZeroStateDemoComponent"
                        },
                        {
                            "name": "ZeroStateExample1Component"
                        },
                        {
                            "name": "ZeroStateExample2Component"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DataTableModule",
            "id": "module-DataTableModule-977b0e5bbf291326259bf76120b098898f9621660bc5f6746f96fd0bb0a24598dcfe3f6cf64eb8cb8920d3a86ff13bab32f42225ebabeea887fecbeec215650b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui/src/lib/components/data-table/data-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { HammerheadUiModule } from '../../hammerhead-ui.module';\nimport { ZeroStateModule } from '../zero-state/zero-state.module';\nimport { HHDirectivesModule } from './../../directives/directives.module';\nimport { DataTableComponent } from './data-table.component';\n\n@NgModule({\n    declarations: [DataTableComponent],\n    imports: [HammerheadUiModule, HHDirectivesModule, ZeroStateModule],\n    exports: [DataTableComponent]\n})\nexport class DataTableModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DataTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HHDirectivesModule"
                        },
                        {
                            "name": "HammerheadUiModule"
                        },
                        {
                            "name": "ZeroStateModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DataTableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HammerheadUiModule",
            "id": "module-HammerheadUiModule-3b1e25a304bef4d1e58e5eab3b2833568ed33477cc96220ed6fd6b08469c8dadcfa44eb2b5dc752b65cd9dacbc60147803b2e50680ae499b2c883a50baa949e1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui/src/lib/hammerhead-ui.module.ts",
            "methods": [],
            "sourceCode": "import { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MetadataDirective } from './directives/metadata.directive';\n\n@NgModule({\n    declarations: [MetadataDirective],\n    imports: [\n        CdkTableModule,\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressBarModule,\n        MatSliderModule,\n        MatTooltipModule,\n        OverlayModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        CdkTableModule,\n        CommonModule,\n        FlexLayoutModule,\n        FormsModule,\n        MatButtonModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressBarModule,\n        MatSliderModule,\n        MatTooltipModule,\n        OverlayModule,\n        ReactiveFormsModule,\n        MetadataDirective,\n    ],\n})\nexport class HammerheadUiModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MetadataDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MetadataDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HHDirectivesModule",
            "id": "module-HHDirectivesModule-09c51ec066ba59827236b9fd5f93064cf02f070f8d4aae9dc52d0056936fa4f9ab84aeb135c1103662eb7014d433e2d1bb82b422ea191b2314069c4607711d99",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui/src/lib/directives/directives.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { SearchSelectorModule } from '../components/search-selector/search-selector.module';\nimport { HammerheadUiModule } from '../hammerhead-ui.module';\nimport {\n    ContextmenuDialogComponent,\n    ContextmenuDirective\n} from './contextmenu.directive';\nimport {\n    SearchSelectorDialogComponent,\n    SearchSelectorDirective\n} from './search-selector.directive';\n\nconst DIRECTIVES = [ContextmenuDirective, SearchSelectorDirective];\nconst DIALOGS = [ContextmenuDialogComponent, SearchSelectorDialogComponent];\n\n@NgModule({\n    declarations: [...DIALOGS, ...DIRECTIVES],\n    imports: [HammerheadUiModule, SearchSelectorModule],\n    exports: [...DIRECTIVES],\n    entryComponents: DIALOGS\n})\nexport class HHDirectivesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContextmenuDialogComponent"
                        },
                        {
                            "name": "ContextmenuDirective"
                        },
                        {
                            "name": "SearchSelectorDialogComponent"
                        },
                        {
                            "name": "SearchSelectorDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HammerheadUiModule"
                        },
                        {
                            "name": "SearchSelectorModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ContextmenuDirective"
                        },
                        {
                            "name": "SearchSelectorDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchSelectorModule",
            "id": "module-SearchSelectorModule-88e7d6dddc6c86666ab2cc1d6f2db1212512073d2f46ead4ff6ffe6535ebbd701cd9d31135cc526579ffd061074a7ead1ffc04ae066d8f0fd191074f0050e8ed",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui/src/lib/components/search-selector/search-selector.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { HammerheadUiModule } from '../../hammerhead-ui.module';\nimport { SearchSelectorComponent } from './search-selector.component';\n\n@NgModule({\n    declarations: [SearchSelectorComponent],\n    imports: [HammerheadUiModule],\n    exports: [SearchSelectorComponent]\n})\nexport class SearchSelectorModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchSelectorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HammerheadUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchSelectorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ServicesViewModule",
            "id": "module-ServicesViewModule-4c24366d07296abd1e0a97979f74fcd6c8dc4f43619d2cf366c21409e5ab31ebc68af52456a395c67fe04745541c7d0319bd99ec5a1795ed94a22f7c97329931",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui-app/src/app/views/services/services-view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ProximityDialogService } from 'projects/hammerhead-ui/src/public-api';\nimport { SharedComponentsModule } from '../../components/shared/shared-components.module';\nimport {\n    ProximityDialogAComponent,\n    ProximityDialogExampleAComponent\n} from './components/proximity-dialog/examples/proximity-dialog-example-a/proximity-dialog-example-a.component';\nimport { ProximityDialogDemoComponent } from './components/proximity-dialog/proximity-dialog-demo.component';\nimport { ServicesOverviewComponent } from './components/services-overview/services-overview.component';\nimport { ROUTES_SERVICES_VIEW } from './services-view.routes';\n\nexport const SERVICE_DEMOS = [\n    {\n        id: 'proximity-dialog',\n        name: 'Proximity Dialog Service'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(ROUTES_SERVICES_VIEW), SharedComponentsModule],\n    declarations: [\n        ProximityDialogAComponent,\n        ProximityDialogDemoComponent,\n        ProximityDialogExampleAComponent,\n        ServicesOverviewComponent\n    ],\n    entryComponents: [ProximityDialogAComponent],\n    providers: [ProximityDialogService]\n})\nexport class ServicesViewModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ProximityDialogService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProximityDialogAComponent"
                        },
                        {
                            "name": "ProximityDialogDemoComponent"
                        },
                        {
                            "name": "ProximityDialogExampleAComponent"
                        },
                        {
                            "name": "ServicesOverviewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedComponentsModule",
            "id": "module-SharedComponentsModule-dd1b1649bbce3682450446f7d9d9cd6b3dc383877e1fe7b6a315f5abc88c9fb6eeeabc587997f83ebeaf0e3a4cbdc5d10314fc60368730e5a83bcbc2799a7e33",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui-app/src/app/components/shared/shared-components.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [],
                    "optional": false,
                    "returnType": "ModuleWithProviders<SharedComponentsModule>",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "sourceCode": "import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {\n    DataTableModule,\n    HHDirectivesModule,\n    ProximityDialogService,\n    SearchSelectorModule,\n    TimelineModule,\n    ZeroStateModule\n} from 'hammerhead-ui';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { DemoExampleComponent } from './demo-example/demo-example.component';\nimport { DemoComponent } from './demo/demo.component';\n\nconst COMPONENTS = [DemoComponent, DemoExampleComponent];\n\nconst MATERIAL_MODULES = [\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    MatToolbarModule,\n    OverlayModule\n];\n\n@NgModule({\n    declarations: COMPONENTS,\n    imports: [\n        CommonModule,\n        DataTableModule,\n        FlexLayoutModule,\n        HHDirectivesModule,\n        MarkdownModule.forChild(),\n        SearchSelectorModule,\n        TimelineModule,\n        ZeroStateModule,\n        ...MATERIAL_MODULES\n    ],\n    exports: [\n        CommonModule,\n        DataTableModule,\n        FlexLayoutModule,\n        HHDirectivesModule,\n        SearchSelectorModule,\n        TimelineModule,\n        ZeroStateModule,\n        ...COMPONENTS,\n        ...MATERIAL_MODULES\n    ]\n})\nexport class SharedComponentsModule {\n    static forRoot(): ModuleWithProviders<SharedComponentsModule> {\n        return {\n            ngModule: SharedComponentsModule,\n            providers: [ProximityDialogService]\n        };\n    }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DemoComponent"
                        },
                        {
                            "name": "DemoExampleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DataTableModule"
                        },
                        {
                            "name": "HHDirectivesModule"
                        },
                        {
                            "name": "SearchSelectorModule"
                        },
                        {
                            "name": "TimelineModule"
                        },
                        {
                            "name": "ZeroStateModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DataTableModule"
                        },
                        {
                            "name": "DemoComponent"
                        },
                        {
                            "name": "DemoExampleComponent"
                        },
                        {
                            "name": "HHDirectivesModule"
                        },
                        {
                            "name": "SearchSelectorModule"
                        },
                        {
                            "name": "TimelineModule"
                        },
                        {
                            "name": "ZeroStateModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TimelineModule",
            "id": "module-TimelineModule-1d4fbbce6936f7886e0e60ede98742b3e53bb4f1b79e7429e527804e033c52bc6ed41651029b7b3ac3dcb92649cef34f0550598e0752f12f976acfe376101206",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui/src/lib/components/timeline/timeline.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HammerheadUiModule } from '../../hammerhead-ui.module';\nimport { TimelineComponent } from './timeline.component';\n\n@NgModule({\n    declarations: [TimelineComponent],\n    imports: [CommonModule, HammerheadUiModule],\n    exports: [TimelineComponent]\n})\nexport class TimelineModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TimelineComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HammerheadUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TimelineComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZeroStateModule",
            "id": "module-ZeroStateModule-e59d6aa63be6f87150a211df323bcb4b8d313a33aabf6d20396e1bd06a7f0c4a41665785881a0c5f6435c05fe7095e294e53ddfdf127a62eaef78de99d2c1f50",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/hammerhead-ui/src/lib/components/zero-state/zero-state.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { HammerheadUiModule } from '../../hammerhead-ui.module';\nimport { ZeroStateComponent } from './zero-state.component';\nimport { HHDirectivesModule } from '../../directives/directives.module';\n\n@NgModule({\n    declarations: [ZeroStateComponent],\n    imports: [HammerheadUiModule, HHDirectivesModule],\n    exports: [ZeroStateComponent]\n})\nexport class ZeroStateModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZeroStateComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HHDirectivesModule"
                        },
                        {
                            "name": "HammerheadUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZeroStateComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "COMPONENT_DEMOS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components-view.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        id: 'context-menu',\n        name: 'Context Menu'\n    },\n    {\n        id: 'data-table',\n        name: 'Data Table'\n    },\n    {\n        id: 'search-selector',\n        name: 'Search Selector'\n    },\n    {\n        id: 'zero-state',\n        name: 'Zero State'\n    }\n]"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/components/shared/shared-components.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[DemoComponent, DemoExampleComponent]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "dataTableAnimations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui/src/lib/components/data-table/data-table.animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n    masterDetailSlide: trigger('masterDetailSlide', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(`${MasterDetailState.Void}, ${MasterDetailState.MasterShow}`, style({ transform: 'none' })),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(MasterDetailState.DetailsShow, style({ transform: 'translate3d(-50%, 0, 0)', minHeight: '1px' })),\n\n        transition(\n            `${MasterDetailState.MasterShow} => ${MasterDetailState.DetailsShow}, ` +\n            `${MasterDetailState.DetailsShow} => ${MasterDetailState.MasterShow}`,\n            animate('0.33s cubic-bezier(0.35, 0, 0.25, 1)')\n        )\n    ])\n}"
            },
            {
                "name": "DIALOGS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui/src/lib/directives/directives.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ContextmenuDialogComponent, SearchSelectorDialogComponent]"
            },
            {
                "name": "DIRECTIVES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui/src/lib/directives/directives.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ContextmenuDirective, SearchSelectorDirective]"
            },
            {
                "name": "DUMMY_TABLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/data-table.dummy-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
            },
            {
                "name": "DUMMY_TABLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-a/data-table-example-a.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
            },
            {
                "name": "DUMMY_TABLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-b/data-table-example-b.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
            },
            {
                "name": "DUMMY_TABLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-c/data-table-example-c.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
            },
            {
                "name": "DUMMY_TABLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-d/data-table-example-d.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
            },
            {
                "name": "DUMMY_TABLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-e/data-table-example-e.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
            },
            {
                "name": "DUMMY_TABLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-f/data-table-example-f.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type",
                "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
            },
            {
                "name": "DUMMY_TABLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-h/data-table-example-h.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        age: 23,\n        name: 'Shields Cameron',\n        gender: 'male',\n        company: 'EXIAND',\n        email: 'shieldscameron@exiand.com',\n        phone: '+1 (804) 400-2621'\n    },\n    {\n        age: 39,\n        name: 'Johns Conley',\n        gender: 'male',\n        company: 'ISONUS',\n        email: 'johnsconley@isonus.com',\n        phone: '+1 (891) 557-3906'\n    },\n    {\n        age: 27,\n        name: 'Ayers Reeves',\n        gender: 'male',\n        company: 'CUIZINE',\n        email: 'ayersreeves@cuizine.com',\n        phone: '+1 (943) 483-2547'\n    },\n    {\n        age: 23,\n        name: 'Wynn Briggs',\n        gender: 'male',\n        company: 'MIRACULA',\n        email: 'wynnbriggs@miracula.com',\n        phone: '+1 (980) 556-3858'\n    },\n    {\n        age: 25,\n        name: 'Leon Mayo',\n        gender: 'male',\n        company: 'ENERVATE',\n        email: 'leonmayo@enervate.com',\n        phone: '+1 (963) 569-2753'\n    }\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MATERIAL_MODULES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/components/shared/shared-components.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    MatToolbarModule,\n    OverlayModule\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SERVICE_DEMOS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/hammerhead-ui-app/src/app/views/services/services-view.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        id: 'proximity-dialog',\n        name: 'Proximity Dialog Service'\n    }\n]"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ButtonPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"above\" | \"below\" | \"before\" | \"after\"",
                "file": "projects/hammerhead-ui/src/lib/interfaces/button-position.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "MasterDetailState",
                "childs": [
                    {
                        "name": "MasterShow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "master-show"
                    },
                    {
                        "name": "DetailsShow",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "details-show"
                    },
                    {
                        "name": "Void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "void"
                    },
                    {
                        "name": "Wildcard",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "*"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/hammerhead-ui/src/lib/components/data-table/data-table.animations.ts"
            }
        ],
        "groupedVariables": {
            "projects/hammerhead-ui-app/src/app/views/components/components-view.module.ts": [
                {
                    "name": "COMPONENT_DEMOS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components-view.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        id: 'context-menu',\n        name: 'Context Menu'\n    },\n    {\n        id: 'data-table',\n        name: 'Data Table'\n    },\n    {\n        id: 'search-selector',\n        name: 'Search Selector'\n    },\n    {\n        id: 'zero-state',\n        name: 'Zero State'\n    }\n]"
                }
            ],
            "projects/hammerhead-ui-app/src/app/components/shared/shared-components.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/components/shared/shared-components.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[DemoComponent, DemoExampleComponent]"
                },
                {
                    "name": "MATERIAL_MODULES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/components/shared/shared-components.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    MatToolbarModule,\n    OverlayModule\n]"
                }
            ],
            "projects/hammerhead-ui/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "projects/hammerhead-ui-app/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "projects/hammerhead-ui/src/lib/components/data-table/data-table.animations.ts": [
                {
                    "name": "dataTableAnimations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui/src/lib/components/data-table/data-table.animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n    masterDetailSlide: trigger('masterDetailSlide', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(`${MasterDetailState.Void}, ${MasterDetailState.MasterShow}`, style({ transform: 'none' })),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(MasterDetailState.DetailsShow, style({ transform: 'translate3d(-50%, 0, 0)', minHeight: '1px' })),\n\n        transition(\n            `${MasterDetailState.MasterShow} => ${MasterDetailState.DetailsShow}, ` +\n            `${MasterDetailState.DetailsShow} => ${MasterDetailState.MasterShow}`,\n            animate('0.33s cubic-bezier(0.35, 0, 0.25, 1)')\n        )\n    ])\n}"
                }
            ],
            "projects/hammerhead-ui/src/lib/directives/directives.module.ts": [
                {
                    "name": "DIALOGS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui/src/lib/directives/directives.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ContextmenuDialogComponent, SearchSelectorDialogComponent]"
                },
                {
                    "name": "DIRECTIVES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui/src/lib/directives/directives.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ContextmenuDirective, SearchSelectorDirective]"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/data-table.dummy-data.ts": [
                {
                    "name": "DUMMY_TABLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/data-table.dummy-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-a/data-table-example-a.component.ts": [
                {
                    "name": "DUMMY_TABLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-a/data-table-example-a.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-b/data-table-example-b.component.ts": [
                {
                    "name": "DUMMY_TABLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-b/data-table-example-b.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-c/data-table-example-c.component.ts": [
                {
                    "name": "DUMMY_TABLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-c/data-table-example-c.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-d/data-table-example-d.component.ts": [
                {
                    "name": "DUMMY_TABLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-d/data-table-example-d.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-e/data-table-example-e.component.ts": [
                {
                    "name": "DUMMY_TABLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-e/data-table-example-e.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-f/data-table-example-f.component.ts": [
                {
                    "name": "DUMMY_TABLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-f/data-table-example-f.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "defaultValue": "{\n    tokens: [\n        { id: 'token-1', token: 'oQvACZi7yyNbzKEQ7H9t' },\n        { id: 'token-2', token: 'oQvACZi7yyNbzKEQ7H9u' },\n        { id: 'token-3', token: 'oQvACZi7yyNbzKEQ7H9v' },\n        { id: 'token-4', token: 'oQvACZi7yyNbzKEQ7H9w' },\n        { id: 'token-5', token: 'oQvACZi7yyNbzKEQ7H9x' }\n    ]\n}"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-h/data-table-example-h.component.ts": [
                {
                    "name": "DUMMY_TABLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-h/data-table-example-h.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        age: 23,\n        name: 'Shields Cameron',\n        gender: 'male',\n        company: 'EXIAND',\n        email: 'shieldscameron@exiand.com',\n        phone: '+1 (804) 400-2621'\n    },\n    {\n        age: 39,\n        name: 'Johns Conley',\n        gender: 'male',\n        company: 'ISONUS',\n        email: 'johnsconley@isonus.com',\n        phone: '+1 (891) 557-3906'\n    },\n    {\n        age: 27,\n        name: 'Ayers Reeves',\n        gender: 'male',\n        company: 'CUIZINE',\n        email: 'ayersreeves@cuizine.com',\n        phone: '+1 (943) 483-2547'\n    },\n    {\n        age: 23,\n        name: 'Wynn Briggs',\n        gender: 'male',\n        company: 'MIRACULA',\n        email: 'wynnbriggs@miracula.com',\n        phone: '+1 (980) 556-3858'\n    },\n    {\n        age: 25,\n        name: 'Leon Mayo',\n        gender: 'male',\n        company: 'ENERVATE',\n        email: 'leonmayo@enervate.com',\n        phone: '+1 (963) 569-2753'\n    }\n]"
                }
            ],
            "projects/hammerhead-ui-app/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/hammerhead-ui-app/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "projects/hammerhead-ui-app/src/app/views/services/services-view.module.ts": [
                {
                    "name": "SERVICE_DEMOS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/hammerhead-ui-app/src/app/views/services/services-view.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        id: 'proximity-dialog',\n        name: 'Proximity Dialog Service'\n    }\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "projects/hammerhead-ui/src/lib/components/data-table/data-table.animations.ts": [
                {
                    "name": "MasterDetailState",
                    "childs": [
                        {
                            "name": "MasterShow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "master-show"
                        },
                        {
                            "name": "DetailsShow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "details-show"
                        },
                        {
                            "name": "Void",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "void"
                        },
                        {
                            "name": "Wildcard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "*"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/hammerhead-ui/src/lib/components/data-table/data-table.animations.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "projects/hammerhead-ui/src/lib/interfaces/button-position.interface.ts": [
                {
                    "name": "ButtonPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"above\" | \"below\" | \"before\" | \"after\"",
                    "file": "projects/hammerhead-ui/src/lib/interfaces/button-position.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "kind": "component",
                "component": "HomeViewComponent",
                "path": ""
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "projects/hammerhead-ui-app/e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/components/shared/demo-example/demo-example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DemoExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/components/shared/demo/demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/components/shared/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/components/shared/shared-components.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MATERIAL_MODULES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/components/side-nav/side-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/components/top-nav/top-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components-view.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENT_DEMOS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/components-overview/components-overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComponentsOverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/context-menu-demo/context-menu-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContextMenuDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/context-menu-demo/examples/context-menu-example-a/context-menu-example-a.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContextMenuExampleAComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/data-table-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/data-table.dummy-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SystemToken",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/data-table.dummy-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TABLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-a/data-table-example-a.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableExampleAComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-a/data-table-example-a.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TABLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-b/data-table-example-b.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableExampleBComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-b/data-table-example-b.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TABLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-c/data-table-example-c.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableExampleCComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-c/data-table-example-c.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TABLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-d/data-table-example-d.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableExampleDComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-d/data-table-example-d.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TABLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-e/data-table-example-e.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableExampleEComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-e/data-table-example-e.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TABLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-f/data-table-example-f.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableExampleFComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-f/data-table-example-f.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TABLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-g/data-table-example-g.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableExampleGComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-h/data-table-example-h.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableExampleHComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/data-table-demo/examples/data-table-example-h/data-table-example-h.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DUMMY_TABLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/search-selector-demo/examples/search-selector-example-a/search-selector-example-a.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchSelectorExampleAComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/search-selector-demo/examples/search-selector-example-b/search-selector-example-b.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchSelectorExampleBComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/search-selector-demo/search-selector-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchSelectorDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/examples/zero-state-example-1/zero-state-example-1.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZeroStateExample1Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/examples/zero-state-example-2/zero-state-example-2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZeroStateExample2Component",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/components/components/zero-state-demo/zero-state-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZeroStateDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/home/home-view/home-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/services/components/proximity-dialog/examples/proximity-dialog-example-a/proximity-dialog-example-a.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProximityDialogAComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/services/components/proximity-dialog/examples/proximity-dialog-example-a/proximity-dialog-example-a.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProximityDialogExampleAComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/services/components/proximity-dialog/proximity-dialog-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProximityDialogDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/services/components/services-overview/services-overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ServicesOverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/app/views/services/services-view.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SERVICE_DEMOS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui-app/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/components/data-table/data-table-source.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DataTableSource",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/components/data-table/data-table.animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dataTableAnimations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/components/data-table/data-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DataTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/components/search-selector/search-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/components/timeline/timeline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimelineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/components/zero-state/zero-state.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZeroStateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/directives/contextmenu.directive.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContextmenuDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/directives/contextmenu.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ContextmenuDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/directives/contextmenu.directive.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContextmenuData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/directives/directives.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIALOGS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/directives/directives.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DIRECTIVES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/directives/metadata.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "MetadataDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/directives/search-selector.directive.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchSelectorDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/directives/search-selector.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SearchSelectorDirective",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/interfaces/contextmenu-item.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContextmenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/interfaces/data-dialog.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataDialog",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/interfaces/data-table-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableAction",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/interfaces/data-table-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableColumnConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/interfaces/data-table-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableConfig",
                "coveragePercent": 6,
                "coverageCount": "1/16",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/interfaces/data-table-config.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataTableSortConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/interfaces/display-value-pair.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DisplayValuePair",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/interfaces/timeline-date.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TimelineDate",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/lib/services/proximity-dialog/proximity-dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProximityDialogService",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/hammerhead-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}